//Ultra Foreground Renderer

//v7.00 for maya(2012-2015)

//====================================================================================================
//====================================================================================================

//by 劲爆羊 & CG风火连城 

//bug report：
//1、email: 179454962@qq.com
//2、渲染qq群： 84745035
//To any TDs who read this message：if u modified this script or upgraded it，pls let us know，thank u！

//-------------------------------------------------------------------------------------------------

//////////////////////

//注：刷新

shutdown_rf();
global proc refresh_window(){
global int $temp_oc;
 fix_renderview();
$temp_oc=0;
int $if_interrupt=0;
int $temp_CD=1-(`getAttr "defaultRenderLayer.renderable"`);
setAttr "defaultRenderLayer.renderable" ($temp_CD) ;
setAttr "defaultRenderLayer.renderable" (1-$temp_CD) ;
string $allRenderLayer[]=`ls    -type "renderLayer"`;
string $temp_rf_rl[]=`ls  -rn -type "renderLayer"`;
$allRenderLayer=`stringArrayRemove $temp_rf_rl $allRenderLayer`; 
if(size($allRenderLayer)==1){
duplicate -inputConnections defaultRenderLayer;renderLayerEditorItemOnRename "defaultRenderLayer1" "UFR_Renderlayer";}
setAttr "defaultRenderLayer.renderable" 0;
shutdown_rf();
$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
  
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
python "import os.path"; 
 
int $temp_hwin=$num_Layer*35;
int $height_rlWin=`clamp 120 230 $temp_hwin`;

string $defaultLocation_temp= `workspace -en images`;
string $defaultLocation= toNativePath($defaultLocation_temp);
int $theResolution_w=`getAttr "defaultResolution.w"`;
int $theResolution_h=`getAttr "defaultResolution.h"`;
string $getTheW;
string $getTheH;

deleteUI main_layout;

 setIFMover($allRenderLayer);
 if($num_Layer==0) {confirmDialog -icn "warning" -title "提示" -message "场景中无可渲染层\n（默认渲染层无法被渲染）" -button "关闭"
 -cancelButton "No" -dismissString "No";deleteUI crazySheep_render;
} if($num_Layer!=0) {


string $lay =`rowColumnLayout -p crazySheep_render -numberOfColumns 1  -h $height_rlWin main_layout`;
rowColumnLayout -numberOfColumns 26 ;
//frameLayout -fn "boldLabelFont" -lv 1 -l "         |Render Layer|                 |Render Using|               |Camera|                   |Image format|          |compression|    |Start/End frame|        |File name prefix|          |ON/OFF|" -w 970 -h $height_rlWin ;

text -l "            ";
text -fn "boldLabelFont" -l "|Render Layer|" ;


text -l "              ";
text -fn "boldLabelFont" -l "|Render Using|"  text_RU;

checkBox -l "" -cc "cb_ctrl_menu_RU()" -ann "编辑渲染器" cb_RU ;
button -vis 0 -w 20 -l "↓" -c "arrow_ctrl_RU;arrow_ctrl_menu_RU($allRenderLayer,$num_Layer);changeInfoOfRender;arrow_ctrl_IF;arrow_ctrl_menu_IF($allRenderLayer,$num_Layer)" button_RU;

text -l "     ";
text -fn "boldLabelFont" -l "|Camera|"  text_CA;
checkBox -l "" -cc "cb_ctrl_menu_CA()" -ann "编辑摄像机" cb_CA;

button -vis 0 -w 20 -l "↓" -c "arrow_ctrl_CA;arrow_ctrl_menu_CA($allRenderLayer,$num_Layer);changeInfoOfRender" button_CA;

text -l "   ";
text  -fn "boldLabelFont" -l "|Image format|"  text_IF;
checkBox -l "" -cc "cb_ctrl_menu_IF()" -ann "编辑图片格式" cb_IF;



button -vis 0 -w 1 -l "↓" -c "arrow_ctrl_COM;arrow_ctrl_menu_COM($allRenderLayer,$num_Layer)" button_COM;
text -l "  ";
text -fn "boldLabelFont" -l "|Frame range|" text_SEF;
checkBox -l "" -cc "cb_ctrl_menu_SEF()" -ann "编辑起始结束帧" cb_SEF;

button -vis 0 -w 5 -l "↓" -c "arrow_ctrl_SEF;arrow_ctrl_menu_SEF($allRenderLayer,$num_Layer)" button_SEF;
text -l "   ";
text -fn "boldLabelFont" -l "|File name prefix|" ;
checkBox -l "" -cc "cb_ctrl_menu_FNP()" -ann "编辑文件名" cb_FNP;

text -l "   ";
iconTextButton -st "iconOnly" -ann "刷新工具界面" -c refresh_window -i  "rvIPRRefresh.png";
iconTextButton -st "iconOnly" -ann "打开进度面板" -c "if_vis_pro($num_Layer)" -i  "trackRipple.png";
iconTextButton -st "iconOnly" -ann "查看详细渲染日志" -c openlog -i  "refEdOutliner.png" ;
iconTextButton -st "iconOnly" -ann "关闭所有渲染层开关" -c shutdown -i  "Mute_ON.png" ;


  setParent ..;    
rowColumnLayout -numberOfColumns 1 ;
string $scrollLayout = `scrollLayout -w 835 
        -horizontalScrollBarThickness 16
        -verticalScrollBarThickness   16`;
        rowColumnLayout -numberOfColumns 2  ;
        rowColumnLayout  -numberOfColumns 1  -cw 1 150;
        iconTextRadioCollection  witch_RL_sl;
        for ($CSR_1 = $num_Layer-1; $CSR_1 >-1; $CSR_1--){
        iconTextRadioButton -fn "boldLabelFont" -ebg 1   -cc ("changeInfoOfRender;changeWindowOfRender;set6cb()") -style "textOnly" -h 22 -l $allRenderLayer[$CSR_1]  -select ("button_"+$allRenderLayer[$CSR_1]);}
   
         setParent ..;  
        rowColumnLayout  -numberOfColumns 12 -cw 1 127 -cw 2 12 -cw 3 100 -cw 4 20 -cw 5 90 -cw 6 10 -cw 7 40 -cw 8 40 -cw 9 30 -cw 10 170 -cw 11 10 -cw 12 1 aaa;
        for ($CSR_2 = $num_Layer-1; $CSR_2 >-1; $CSR_2--) {
          
       
            optionMenuGrp -en 0 -cc ("changeInfoOfRender;changeTheFormatMenu(\""+$allRenderLayer[$CSR_2]+"\");changeRUred(\""+$allRenderLayer[$CSR_2]+"\");set6cb();changeFF(\""+$allRenderLayer[$CSR_2]+"\")") -h 22 ("witch_render_"+$allRenderLayer[$CSR_2]);
menuItem -label "mayaSoftware";
menuItem -label "mentalRay" -en 0 ("MI_MR_"+$allRenderLayer[$CSR_2]);                                                                                           
menuItem -label "arnold" -en 0 ("MI_AR_"+$allRenderLayer[$CSR_2]);
menuItem -label "vray" -en 0 ("MI_VR_"+$allRenderLayer[$CSR_2]); 
string $all_render[]= `renderer -query -namesOfAvailableRenderers`;
if(`stringArrayContains "arnold" $all_render`==1)
{menuItem -e -en 1 ("MI_AR_"+$allRenderLayer[$CSR_2]);}     
if(`stringArrayContains "mentalRay" $all_render`==1)
{menuItem -e -en 1 ("MI_MR_"+$allRenderLayer[$CSR_2]);}  
if(`stringArrayContains "vray" $all_render`==1)
{menuItem -e -en 1 ("MI_VR_"+$allRenderLayer[$CSR_2]);}                           
menuItem -en 0  -label "Unsupport Render!!" ("UsRender_"+$allRenderLayer[$CSR_2]);   
text -l "   ";
            cameraOptionMenu_RL($CSR_2,$allRenderLayer);
            text -l "   ";
            formatOptionMenu_RL($CSR_2,$allRenderLayer);
            text -l "   ";
     
            startFrameOptionTx_RL($CSR_2,$allRenderLayer);
            endFrameOptionTx_RL($CSR_2,$allRenderLayer);
            text -l "   ";
            fileNameOptionTx_RL($CSR_2,$allRenderLayer);
            text -l "   ";
            
           
            checkBox -vis 0 -h 22 -cc ("changeInfoOfRender;setFN(\""+$allRenderLayer[$CSR_2]+"\")") -v `getAttr ($allRenderLayer[$CSR_2]+".renderable")` -l "" ("if_render_"+$allRenderLayer[$CSR_2]);
           



        }



 setParent ..;  
 setParent ..;  
      setParent ..;  
   

       setParent ..;
rowColumnLayout -numberOfColumns 1 ;
   

     setParent ..; 
 rowColumnLayout -numberOfColumns 4 ;
  rowColumnLayout -numberOfColumns 1 ;
rowColumnLayout -numberOfColumns 1 -h 105;  
scrollLayout -bgc 0.671 0.671 0.671  -h 105 -w 7;
setParent ..;
setParent ..;
setParent ..;
 rowColumnLayout -numberOfColumns 1 -w 480;

rowColumnLayout -numberOfColumns 7 ;



text  -fn "boldLabelFont" -l  "Output path  :  ";
textField -cc "fix_path()" -tx ($defaultLocation+"\\") -fn "boldLabelFont" -ann "设置文件输出路径" -w 250 path_loc;
text -l " ";
button  -l "Browse…" -w 65 -ann "浏览..." -c browse_path; 
text -l "  ";

button  -l "Open path" -ann "打开路径" -w 70 -c openImagesFolder ; 
setParent ..;


rowColumnLayout -numberOfColumns 11;

text -fn "boldLabelFont" -l "Presets ：";
 optionMenuGrp -cc "R_preset_B;changeInfoOfRender"  Res_preset ;
menuItem -label "HD 1080P";
menuItem -label "HD 720P";
menuItem -label "640*480";
menuItem -label "1k square";
menuItem -label "2k square";
menuItem -label "3k square";
menuItem -label "4k square";
menuItem -label "Custom";

text -fn "boldLabelFont" -l "W ：" -w 25;
intField   -v $theResolution_w -ann "设置图像输出宽度" -w 40 -cc "R_preset_A($getTheW,$getTheH);changeInfoOfRender" the_w;
text -l " ";
text  -fn "boldLabelFont" -l "H ：" -w 25;
intField  -v $theResolution_h  -ann "设置图像输出高度" -w 40 -cc "R_preset_A($getTheW,$getTheH);changeInfoOfRender" the_h;
text -l " ";
text -fn "boldLabelFont" -l "padding ：" -ann "设置序列帧数字位数";
 optionMenuGrp -cc "changeInfoOfRender" -ann "设置序列帧数字位数" the_padding;
menuItem -label "2";
menuItem -label "3";
menuItem -label "4";
menuItem -label "5";
menuItem -label "6";
optionMenuGrp -e -v "4" the_padding;

button  -l "Render Settings" -ann "打开详细渲染设置面板" -c open_render_setting -w 100;
setParent ..;
rowColumnLayout -numberOfColumns 3  -cw 1 330;

rowColumnLayout -numberOfColumns 1  -h 3 -cw 1 330;
scrollLayout -bgc 0.671 0.671 0.671  -h 7 -w 346;
setParent ..;

setParent ..;

text -l "      ";
text -l "  ";

rowColumnLayout -numberOfColumns 1;
rowColumnLayout -en 1 -numberOfColumns 4  -cw 1 130 -cw 2 50 -h 20 the4box;




checkBox  -l "Preserve Layer Name" cb_Preserve;

checkBox  -l "Tiled" cb_Tiled;
checkBox  -l "Autocrop" cb_Autocrop;

checkBox   -l "append" cb_append;


setParent ..;
rowColumnLayout -en 1 -numberOfColumns 7 -cw 1 1 -cw 3 1 -cw 5 1 the2box;
text -l "  ";
checkBox -en 0 -l "Merge AOVs (ar)" -ann "设置AR的AOVs是否合并" -cc changeInfoOfRender cb_m_aovs;

if(`objExists defaultArnoldDriver`){
checkBox -e -v `getAttr "defaultArnoldDriver.mergeAOVs"`  cb_m_aovs;
if(`attributeExists "preserveLayerName" "defaultArnoldDriver"`){
checkBox -e  -v `getAttr "defaultArnoldDriver.preserveLayerName"`  cb_Preserve;
checkBox -e  -v `getAttr "defaultArnoldDriver.tiled"`  cb_Tiled;
checkBox -e -v `getAttr "defaultArnoldDriver.autocrop"` cb_Autocrop;
checkBox -e -v `getAttr "defaultArnoldDriver.append"`  cb_append;

}
}

text -l "  ";
checkBox  -en 0 -l "Merge Passes (mr)" -ann "设置MR的renderPasses是否合并" -cc changeInfoOfRender cb_m_passes;
text -l "  ";
checkBox  -en 0 -l "Merge elemets (vr)" -ann "设置vr的renderElements是否合并" -cc changeInfoOfRender cb_m_RES;
setParent ..;

setParent ..;
rowColumnLayout -numberOfColumns 1 -h 40;  
scrollLayout -bgc 0.671 0.671 0.671  -h 40 -w 7;
setParent ..;
setParent ..;
iconTextButton  -fn "boldLabelFont" -bgc 1.0 0.5 0.17 -h 20 -w 125 -style "iconAndTextHorizontal" -c "if_render($allRenderLayer,$num_Layer)"
    -image1 "bullet_interactivePlayback.png" -ann "开始渲染" -label "       Start \n   Rendering";

setParent ..;
setParent ..;
rowColumnLayout -numberOfColumns 1 ;
rowColumnLayout -numberOfColumns 1 -h 105;  
scrollLayout -bgc 0.671 0.671 0.671  -h 105 -w 7;
setParent ..;
setParent ..;
setParent ..;
rowColumnLayout -numberOfColumns 1 ;

scrollField  -ann "综合渲染信息（ctrl + 鼠标滚轮可放大缩小字体）" -ww 1 -fn "smallBoldLabelFont" -ed 0 -tx `getInfo_renderUI(1)` -w 333 -h 104 info_render;

setParent ..;
setParent ..;
rowColumnLayout -numberOfColumns 6 -cw 1 250 -cw 3 70 -cw 5 50;
helpLine;
text -en 0 -fn "boldLabelFont" -l "##   tip ：Press \"ESC\" to interrupt the rendering.   ##";
text -l "";
iconTextButton -style "iconAndTextHorizontal" -fn "boldLabelFont" -ann "展开/收回" -bgc 0.2 0.2 0.2   -l "Expand"  -h 20 -w 70 -c "open_close()" button_ex;
text -l "";
iconTextButton  -fn "boldLabelFont" -bgc 0.2 0.2 0.2 -h 20 -w 60 -c open_docs_window -style "iconAndTextHorizontal"  -l "HELP" -i "out_defaultOutliner.png"  -ann "打开帮助" ;
setParent ..;
rowColumnLayout -numberOfColumns 1 ;
   

  rowColumnLayout -numberOfColumns 1 -vis 0 -en 0 -h 1 main_pro;
string $scrollLayout = `scrollLayout -w 835  -h ($height_rlWin-20)
        -horizontalScrollBarThickness 16
        -verticalScrollBarThickness   16`;
   rowColumnLayout -numberOfColumns 1  ;      
     
      rowColumnLayout -numberOfColumns 5 -cw 1 150 -cw 2 20 -cw 3 500 -cw 4 40 -cw 5 70 ;  
      for ($pr=$num_Layer-1;$pr>-1;$pr--){
       text -fn "boldLabelFont" -l $allRenderLayer[$pr];
       $the_start_frame=`intField -q -v ("startFrame_"+$allRenderLayer[$pr])`;
       text -fn "boldLabelFont" -l $the_start_frame ("sf_proc_"+$allRenderLayer[$pr]);
       rowColumnLayout -numberOfColumns 2  ;
       progressBar -pr 0 -imp 1  -ii 1 -maxValue 100 -width 500 ("proBar_render_"+$allRenderLayer[$pr]);
       
       text -fn "boldLabelFont" -l "  " ;
       
       setParent ..; 
       $the_end_frame=`intField -q -v ("endFrame_"+$allRenderLayer[$pr])`;
        text -fn "boldLabelFont" -l $the_end_frame ("ef_proc_"+$allRenderLayer[$pr]);
      
 
       button -l "Open path" -c ("openImagesFolder_layer(\""+$allRenderLayer[$pr]+"\")") ("pro_dkml"+$allRenderLayer[$pr]);
       
  }
       setParent ..;   
       
         setParent ..;  
         text  -vis 0 -l "zhongzhi" stop;
         
         
          setParent main_pro;  
          text -l " "; 
            
            text -l " "; 
     setParent ..;  
 

 //注：预载入函数
 
 R_preset_A($getTheW,$getTheH);
 changeWindowOfRender;
 get3menu($allRenderLayer);
 check_error($allRenderLayer);
check_error2($allRenderLayer);
window -e -h ($height_rlWin+140)  -w 850 -sizeable 0 -tlb 0  crazySheep_render ;
set6cb();


 iconTextRadioCollection -e  -select ("button_"+$allRenderLayer[$num_Layer-1])  witch_RL_sl;
 }
 }
 
 global proc fix_temp(){
workspace -fr "images" "images";
}
 
 
 //展开 收拢
global proc open_close(){
    string $allRenderLayer[]=`ls    -type "renderLayer"`;
    string $temp_rf_rl[]=`ls  -rn -type "renderLayer"`;
$allRenderLayer=`stringArrayRemove $temp_rf_rl $allRenderLayer`;
if(size($allRenderLayer)==1){
duplicate -inputConnections defaultRenderLayer;


renderLayerEditorItemOnRename "defaultRenderLayer1" "UFR_Renderlayer";}

setAttr "defaultRenderLayer.renderable" 0;


$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
  
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;
$allRenderLayer =changeOrderOfArr($allRenderLayer);
python "import os.path"; 
 
int $temp_hwin=$num_Layer*35;
int $height_rlWin=`clamp 120 230 $temp_hwin`;
    
    
    global int $temp_oc;
    
    
    if ($temp_oc==0){
        scrollField  -e -w 500 -h 500 info_render;
        iconTextButton -e   -l "Shrink"   button_ex;
        if(`rowColumnLayout -q  -vis  main_pro`==0){
        window -e -h ($height_rlWin+550) -w 1000  -sizeable 0 -tlb 0  crazySheep_render ;}
        if(`rowColumnLayout -q  -vis  main_pro`==1){
        window -e -h ($height_rlWin+690) -w 1140  -sizeable 0 -tlb 0  crazySheep_render ;}
        $temp_oc=1;
    }
    else{
        scrollField  -e -w 333 -h 104 info_render;
        iconTextButton -e   -l "Expand"   button_ex;
        if(`rowColumnLayout -q  -vis  main_pro`==0){
        window -e -h ($height_rlWin+140) -w 850 -sizeable 0 -tlb 0  crazySheep_render ;}
        if(`rowColumnLayout -q  -vis  main_pro`==1){
        window -e -h ($height_rlWin+280) -w 850 -sizeable 0 -tlb 0  crazySheep_render ;}
        $temp_oc=0;
    }
    
}
//注：修复renderview
global proc fix_renderview(){
$exists=0;
 for ($item in `getPanel -scriptType "renderWindowPanel"`) {
  if ( $item == "renderView" ) {
   //print "renderView exists.n";
   $exists=1;
  }
 }
 if ( $exists == 0 ) {
  for ($item in `getPanel -scriptType "renderWindowPanel"`) {
   //print ( $item + "n");
   if ( $item == "renderWindowPanel1" ) {
   deleteUI renderWindowPanel1;
   $renderPanel = `scriptedPanel -type "renderWindowPanel" -unParent renderView`;
   scriptedPanel -e -label `interToUI $renderPanel` $renderPanel;
   }
  }
 }
 }
 

//注：关闭所有层

global proc shutdown(){
string $allRenderLayer[]=`ls -type "renderLayer"`;
for ($sing in $allRenderLayer)
{setAttr ($sing+".renderable") 0;}
}
global proc shutdown_rf(){
string $temp_rf_rl[]=`ls  -rn -type "renderLayer"`;
for ($sing in $temp_rf_rl)
{setAttr ($sing+".renderable") 0;}
}



//注：帮助文档
 global proc open_docs_window(){
if(`window -ex docs_win`) deleteUI docs_win; 

window -title "docs of help" -sizeable 0 docs_win;
rowColumnLayout -numberOfColumns 1  -p docs_win layout_log;
scrollField -ww 0 -fn "fixedWidthFont" -w 760 -h 600 -tx 
"\n                                   \
《Ultra Foreground Renderer帮助文档》\n\n   你可能碰到过有些因为过于复杂，或者存在不规范操作，亦或者动力学缓存不能正常读取等问题导致的batch render（后台渲染）\
\n失败的场景，要交活儿了，渲不出来，怎么办？这个时候本插件也许能帮你正确渲染出结果。\n\
   本插件是后台batch render渲染不出来的一种补充渲染方案，在这里我们称之为 \" 前台渲染（Foreground render）\"。\
\n   此插件支持以下四种渲染器的前台渲染：Arnold、Vray、Mentalray、Software。虽然我们已经做了大量的debug工作，由于需要\n兼容\
4种渲染器，因此难免仍存在一些bug。如果你在使用的过程中碰到了问题请联系我们进行反馈，方便进一步改进。\n\
\n\
   有bug或者用的不爽的地方请加qq群《Vray&Arnold渲染技术交流》进行反馈，群号：84745035。\n\
   \n\
   有你的反馈本插件才能做得更好。 \n\
   \n\
   \n\----------------------------------------------------------------------------------------------------\n\
   \n\
   \n\
\n\
使用要点：\n\
\n\
1、UFR虽然能够让你修改部分渲染设置，但它的主要作用还是帮助你在前台进行序列帧渲染，所以渲染参数设置等等常规工作，还请在\n    maya中自行设置ok再运行UFR哟~。\n\
2、如果你使用Mentalray渲染器并需要渲染16bit、32bit浮点格式的图像，请务必在Render Settings中手动设置好再使用UFR渲染。\n\
3、开启UFR时，有可能会出现无法正确读取图片格式的情况，那就切换渲染层，再一次尝试运行UFR。\n\
4、对于过于复杂的场景，如果不能一次渲染完所有层，那么请单层单独进行渲染。\n\
5、UFR面板上出现红色选项（渲染器和渲染格式），则渲染一定会出错，请认真检查渲染选项是否有误。\n\
6、本插件所渲染的exr格式图片的压缩格式均已强行锁定为扫描线ZIP，因为这种压缩格式最通用。\n\
7、确保摄像机的名字、渲染层名以及输出路径不能出现奇怪的符号，如冒号等。\n\
8、如果发现脚本面板中出现很多诡异的渲染层，请单击一下脚本面板右上角的红色圈圈按钮，它会关闭掉所有渲染层的渲染开关，点击\n    它之后请再手动开启需要渲染的渲染层开关，再重开脚本或刷新面板即可。\n\
9、如果你只有一层默认渲染层，那么UFR会自动将默认层拷贝为\"UFR_RenderLayer\"来进行渲染。\n\
10、同第一条。 \n\
 \n\
 \n\
 \n\
正确使用步骤(出错的时候请检查下方7条)：\n\
\n\
1、仔细设置好maya自身的渲染设置，加载渲染所需的渲染器。\n\
2、检查摄像机名以及渲染层名有无各种特殊符号，最好是纯字母+数字的命名。\n\
3、检查完毕后启动UFR，如果发现面板中出现了多余的诡异的渲染层，请点击一下面板右上方的红色禁止按钮。\n\
4、你会发现所有渲染层的开关都一律被关闭了，那么请重新开启需要渲染的渲染层开关。\n\
5、重新打开UFR（或者单击面板右上方的绿色刷新按钮）。\n\
6、检查面板上的信息有没有错误或红色报错选项。\n\
7、如果没有，就可以开始渲染了。\n\
\n\
                                                                         劲爆羊 & CG风火连城\n\
																		 " -ed 0  log_render;
setParent layout_log;
rowColumnLayout -h 7;
 setParent ..;  
rowColumnLayout -numberOfColumns 11 -cw 1 170 -cw 2 50 -cw 3 20 -cw 4 50 -cw 5 10 -cw 6 80 -cw 7 20 -cw 8 50 -cw 9 20 -cw 10 80 ;


text -l " ";

text -l " ";
text -l " ";

text -l " ";

text -l " ";

button  -l "close" -c "deleteUI docs_win";
text -l " ";
 setParent ..;  
 rowColumnLayout -h 7;
 setParent ..;  
showWindow docs_win;
}
///////////
//注：读取场景渲染基本信息
int $if_thereis_red;
int $if_interrupt=0;
int $temp_CD=1-(`getAttr "defaultRenderLayer.renderable"`);
setAttr "defaultRenderLayer.renderable" ($temp_CD) ;
setAttr "defaultRenderLayer.renderable" (1-$temp_CD) ;
string $allRenderLayer[]=`ls    -type "renderLayer"`;
string $temp_rf_rl[]=`ls  -rn -type "renderLayer"`;
$allRenderLayer=`stringArrayRemove $temp_rf_rl $allRenderLayer`;
if(size($allRenderLayer)==1){
duplicate -inputConnections defaultRenderLayer;renderLayerEditorItemOnRename "defaultRenderLayer1" "UFR_Renderlayer";}setAttr "defaultRenderLayer.renderable" 0;


$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
  
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;
$allRenderLayer =changeOrderOfArr($allRenderLayer);
python "import os.path"; 
 
int $temp_hwin=$num_Layer*35;
int $height_rlWin=`clamp 120 230 $temp_hwin`;

string $defaultLocation_temp= `workspace -en images`;
string $defaultLocation= toNativePath($defaultLocation_temp);
int $theResolution_w=`getAttr "defaultResolution.w"`;
int $theResolution_h=`getAttr "defaultResolution.h"`;
string $getTheW;
string $getTheH;



///

//注：改变数组里面字符串顺序
global proc string[] changeOrderOfArr(string $the_arr[]){

string $all_t[];
int $n_o=size($the_arr);
int $n_t;
for ($io=0;$io<$n_o;$io++){
$n_t=size($all_t);
$all_t[$n_t]=$the_arr[$n_o-1-$n_t];
}


return $all_t;




}



//设置over给imageformat
global proc setIFMover(string $allRenderLayer[])
{
    for ($thelayer in  $allRenderLayer){
if($thelayer!="defaultRenderLayer"){
editRenderLayerAdjustment -layer $thelayer  "defaultRenderGlobals.imageFormat";}}
}
//注：查探序列号
global proc int getIndex(string $getsize[]){
int $the_index;
for($i =0; $i<size($getsize); $i++) 
{
if($getsize[$i] == "字节")  
{$the_index= $i;}  
}
return $the_index;
}

//注：以整数定义字符串长度    
global proc string defStringFromInt(string $inputString,int $inputNum)
{
 int $nn=0;
string $e1=$inputString;
do{
$e1+=$inputString;
$nn+=1;}
while($nn<$inputNum-1);

return $e1;}
//注：变更格式菜单
global proc changeTheFormatMenu(string $RLN){
string $RDN=`optionMenuGrp -q -v ("witch_render_"+$RLN)`;
if($RDN=="mayaSoftware")
{
   menuItem -e -en 0 ("witch_the_format_exr16"+$RLN);
    menuItem -e -en 0 ("witch_the_format_exr32"+$RLN);
    menuItem -e -en 0 ("witch_the_format_deepexr"+$RLN);
      menuItem -e -en 1 ("witch_the_format_tga"+$RLN);
     menuItem -e -en 1 ("witch_the_format_iff"+$RLN);
  // optionMenuGrp -e -v "PNG(png)" ("witch_the_format_"+$RLN);
   }
   if($RDN=="arnold")
{
   menuItem -e -en 1 ("witch_the_format_exr16"+$RLN);
    menuItem -e -en 1 ("witch_the_format_exr32"+$RLN);
    menuItem -e -en 1 ("witch_the_format_deepexr"+$RLN);
   menuItem -e -en 0 ("witch_the_format_tga"+$RLN);
     menuItem -e -en 0 ("witch_the_format_iff"+$RLN);
   // optionMenuGrp -e -v "PNG(png)" ("witch_the_format_"+$RLN);
   }
   
      if($RDN=="mentalRay")
{
   menuItem -e -en 1 ("witch_the_format_exr16"+$RLN);
    menuItem -e -en 1 ("witch_the_format_exr32"+$RLN);
    menuItem -e -en 0 ("witch_the_format_deepexr"+$RLN);
     menuItem -e -en 1 ("witch_the_format_tga"+$RLN);
     menuItem -e -en 1 ("witch_the_format_iff"+$RLN);
       // optionMenuGrp -e -v "PNG(png)" ("witch_the_format_"+$RLN);
   }
   
   if($RDN=="vray")
{
    menuItem -e -en 1 ("witch_the_format_tga"+$RLN);  
   menuItem -e -en 1 ("witch_the_format_exr16"+$RLN);
   menuItem -e -en 1 ("witch_the_format_exr32"+$RLN);
    menuItem -e -en 0 ("witch_the_format_deepexr"+$RLN);
  
     menuItem -e -en 0 ("witch_the_format_iff"+$RLN);
   // optionMenuGrp -e -v "PNG(png)" ("witch_the_format_"+$RLN);
   }
   changeInfoOfRender;
   }
//注：变更字体根据load override
global proc changeFormatAll(string $allRenderLayer[]){
for($temp_cfa in $allRenderLayer){
changeTheFormatMenu($temp_cfa);}

}
//注：获取字体斜体
global proc getFN(string $allRenderLayer[],int $num_Layer)
{for($crs6=0;$crs6<$num_Layer;$crs6++){
int $getBL=`getAttr ($allRenderLayer[$crs6]+".renderable")`;
 if($getBL==1){
iconTextRadioButton -e -fn "boldLabelFont"  ("button_"+$allRenderLayer[$crs6]);}

else {
   iconTextRadioButton -e -fn "obliqueLabelFont"  ("button_"+$allRenderLayer[$crs6]);
   }}
}
//注：获取输出信息 
global proc string getInfo_renderUI(int $con_info)
{
string $allRenderLayer[]=`ls   -type "renderLayer"`;

$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
    clear $temp_arr;
 int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
 string $getRL_temp=`iconTextRadioCollection -q -sl  witch_RL_sl`;
 string $getRL=`substring $getRL_temp 8 (size($getRL_temp))`;
 string $getRLRD_temp=`optionMenuGrp -q -v ("witch_render_"+$getRL)`;
 string $getRLRD;

//string $getRLRD=`optionMenuGrp -q -v ("witch_render_"+$getRL)`;
 string $getInfoAOVSArr[]=`getAOVarr`;

 string $getInfoAOVS=`getAOV`;
 string $getRLCAM_temp=`optionMenuGrp -q -v ("witch_the_camera_"+$getRL)`;
 string $getRLCAM;
  if (`button -q -l "button_CA"`=="↓")
  {$getRLCAM=$getRLCAM_temp;}
  else{$getRLCAM =`optionMenuGrp -q -v ("witch_the_camera_"+$allRenderLayer[$num_Layer-1])`;}
 string $getRLFMT=`optionMenuGrp -q -v ("witch_the_format_"+$getRL)`;
 string $getRLFMTreal;
 if($getRLFMT=="exr(16bit)"||$getRLFMT=="exr(32bit)"||$getRLFMT=="deepexr"){$getRLFMTreal="exr";}
 if($getRLFMT=="maya(iff)"){$getRLFMTreal="iff";}
 if($getRLFMT=="Targa(tga)"){$getRLFMTreal="tga";}
 if($getRLFMT=="TIFF(tif)"){$getRLFMTreal="tif";}
 if($getRLFMT=="JPEG(jpg)"){$getRLFMTreal="jpg";}
 if($getRLFMT=="PNG(png)"){$getRLFMTreal="png";}
 //string $getRLCOM=`optionMenuGrp -q -v ("witch_the_compression_"+$getRL)`;                 
 string $getRLFRM="("+`intField -q -v ("startFrame_"+$getRL)`+","+`intField -q -v ("endFrame_"+$getRL)`+")";
  string $getSize=`intField -q -v the_w`+"*"+`intField -q -v the_h`;
 string $getRLNAME=`textField -q -tx ("fileName_"+$getRL)`;
 //int $getRLBL=`checkBox -q -v ("if_render_"+$getRL)`;

 int $getPadding=`optionMenuGrp -q -v the_padding`; 
 string $getPath=`textField -q -tx path_loc`;
string $displayAOVs="";
string $getFullPath;
string $allpath[];
string $getPass[];
string $displayPsArr[];
string $displayReArr[];
string $displayPs;
string $allInfoOfRender;
 if (`button -q -l "button_RU"`=="↓")
 {$getRLRD=$getRLRD_temp;}

 else{$getRLRD=`optionMenuGrp -q -v ("witch_render_"+$allRenderLayer[$num_Layer-1])`;}
//如果是AR
if ($getRLRD=="arnold"){
    $displayAOVs=("Active AOVs : \n("+$getInfoAOVS+")\n");
    
    if(`checkBox -q -v cb_m_aovs`==0){
    if(`size($getInfoAOVSArr)`!=0){
    $getInfoAOVSArr[size($getInfoAOVSArr)]="beauty";}
    for ($crs5=0;$crs5<size($getInfoAOVSArr);$crs5++){
$allpath[$crs5]=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$getInfoAOVSArr[$crs5]+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";}

                                        }
if(`checkBox -q -v cb_m_aovs`==1){
    $allpath[0]=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";
                                    }

$getFullPath=stringArrayToString($allpath,"");


    if($getInfoAOVS==""){$displayAOVs="Active AOVs : (NONE)\n";}
if(size($getInfoAOVSArr)==0){$getFullPath=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";}
$allInfoOfRender="Render Layer :         "+$getRL+"\n"+"Render Using :          "+$getRLRD+"\n"+"Camera Using :         "+$getRLCAM+"\n"+"Image size :              "+$getSize+"\n"+"render range :          "+$getRLFRM+"\n---------------------------  \n"+$displayAOVs+"\n---------------------------  \n"+$getFullPath;}
    

if($getRLRD=="mentalRay"){
     
   string  $displayPsArr_tem[]=`getPASSarr($getRL)`;  
      if (`button -q -l "button_RU"`=="↓")
 {$displayPsArr=$displayPsArr_tem;}

 else{$displayPsArr=`getPASSarr($allRenderLayer[$num_Layer-1])`;}

 if(`checkBox -q -v cb_m_passes`==0){
        if(size($displayPsArr_tem)!=0){
         $displayPsArr[size($displayPsArr)]="MasterBeauty";}
        for ($crs5=0;$crs5<size($displayPsArr);$crs5++){
$allpath[$crs5]=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$displayPsArr[$crs5]+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";}}
if(`checkBox -q -v cb_m_passes`==1)
{
    $allpath[0]=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";}
$getFullPath=stringArrayToString($allpath,"");

    
   if(size($displayPsArr)>0){$displayPs=("Associated Passes : \n("+stringArrayToString($displayPsArr_tem,",")+")\n");
     }
     else{$displayPs="Associated Passes : (NONE)\n";$getFullPath=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";}
$allInfoOfRender="Render Layer :         "+$getRL+"\n"+"Render Using :          "+$getRLRD+"\n"+"Camera Using :         "+$getRLCAM+"\n"+"Image size :              "+$getSize+"\n"+"render range :          "+$getRLFRM+"\n---------------------------  \n"+$displayPs+"\n---------------------------  \n"+$getFullPath;}
  
////////
if($getRLRD=="vray"){
     
   string  $displayReArr_tem[]=`getVREE($getRL)`;  
      if (`button -q -l "button_RU"`=="↓")
 {$displayReArr=$displayReArr_tem;}

 else{$displayReArr=`getPASSarr($allRenderLayer[$num_Layer-1])`;}

 if(`checkBox -q -v cb_m_RES`==0){
        if(size($displayReArr_tem)!=0){
         $displayReArr[size($displayReArr)]="MasterBeauty";}
        for ($crs5=0;$crs5<size($displayReArr);$crs5++){
$allpath[$crs5]=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$displayReArr[$crs5]+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";}}
if(`checkBox -q -v cb_m_RES`==1)
{
    $allpath[0]=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";}
$getFullPath=stringArrayToString($allpath,"");

    
   if(size($displayReArr)>0){$displayPs=("Added render elements : \n("+stringArrayToString($displayReArr_tem,",")+")\n");
     }
     else{$displayPs="Added render elements : (NONE)\n";$getFullPath=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";}
$allInfoOfRender="Render Layer :         "+$getRL+"\n"+"Render Using :          "+$getRLRD+"\n"+"Camera Using :         "+$getRLCAM+"\n"+"Image size :              "+$getSize+"\n"+"render range :          "+$getRLFRM+"\n---------------------------  \n"+$displayPs+"\n---------------------------  \n"+$getFullPath;}
  
//
if($getRLRD=="mayaSoftware"){$getFullPath=`getTheSceneName`+"\\"+$getRL+"\\"+$getRLNAME+"_"+$getRLCAM+"."+defStringFromInt("#",$getPadding)+"."+$getRLFMTreal+"\n";
$allInfoOfRender="Render Layer :         "+$getRL+"\n"+"Render Using :          "+$getRLRD+"\n"+"Camera Using :         "+$getRLCAM+"\n"+"Image size :              "+$getSize+"\n"+"render range :          "+$getRLFRM+"\n---------------------------  "+"\n"+$getFullPath;}
  
 

if($con_info==1){
return $allInfoOfRender;}
if($con_info==2){
return $getRL;}

}
//注：斜体变动
global proc setFN(string $name_RL){
  int $getRLBL2 =`checkBox -q -v ("if_render_"+$name_RL)`;
     if($getRLBL2==1){

iconTextRadioButton -e -fn "boldLabelFont"  ("button_"+$name_RL);}
     if($getRLBL2==0){

iconTextRadioButton -e -fn "obliqueLabelFont"  ("button_"+$name_RL);}
    }
//注：com控制
global proc setCOM(string $name_RL){
 string $FMN=`optionMenuGrp -q -v ("witch_the_format_"+$name_RL)`;
string $RDN=`optionMenuGrp -q -v ("witch_render_"+$name_RL)`;
     if($FMN=="exr(16bit)"||$FMN=="exr(32bit)")
     {optionMenuGrp -e -en 1 ("witch_the_compression_"+$name_RL);}
//if($FMN!="exr(16bit)"&&$FMN!="exr(32bit)"){optionMenuGrp -e -v "none" -en 0 ("witch_the_compression_"+$name_RL);}
//if($RDN=="mayaSoftware"||$FMN=="deepexr)"){optionMenuGrp -e -v "none" -en 0 ("witch_the_compression_"+$name_RL);}
    }
//注：所有com控制    
global proc setCOMall(string $allRenderLayer[]){
for ($temp_setallcom in $allRenderLayer){
setCOM($temp_setallcom);
}

    }
//注：输出信息变动：
global proc changeInfoOfRender()
{ string $getRL_temp=`iconTextRadioCollection -q -sl  witch_RL_sl`;
 string $getRL=`substring $getRL_temp 8 (size($getRL_temp))`;
 int $getRLBL=`checkBox -q -v ("if_render_"+$getRL)`;
 if($getRLBL==1){
scrollField -e  -en 1 -tx  `getInfo_renderUI(1)` info_render;
}

else {scrollField -e -en 0 -tx  " \n\n\n                                          There is no infomation of render!" info_render;
   
   }
    }   
    

//注：window title变动：
global proc changeWindowOfRender()
{
    
    
window -e -title  ("   Ultra Foreground Renderer  v7.00 for maya(2012-2015)     ---   "+`getInfo_renderUI(2)`) crazySheep_render;;
    }   
//注：分辨率预设A
global proc R_preset_A(string $getTheW,string $getTheH){
$getTheW=`intField -q -v the_w`;
$getTheH=`intField -q -v the_h`;
string $res_arr=$getTheW+$getTheH;
if($res_arr=="19201080"){optionMenuGrp -e -v "HD 1080P" Res_preset;}
if($res_arr=="1280720"){optionMenuGrp -e -v "HD 720P" Res_preset;}
if($res_arr=="640480"){optionMenuGrp -e -v "640*480" Res_preset;}
if($res_arr=="10241024"){optionMenuGrp -e -v "1k square" Res_preset;}
if($res_arr=="20482048"){optionMenuGrp -e -v "2k square" Res_preset;}
if($res_arr=="30723072"){optionMenuGrp -e -v "3k square" Res_preset;}
if($res_arr=="40964096"){optionMenuGrp -e -v "4k square" Res_preset;}
if($res_arr!="19201080"&&$res_arr!="1280720"&&$res_arr!="640480"&&$res_arr!="10241024"&&$res_arr!="20482048"&&$res_arr!="30723072"&&$res_arr!="40964096"){optionMenuGrp -e -v "Custom" Res_preset;}
}
//注：分辨率预设B
global proc R_preset_B(){
string $get_preset_r=`optionMenuGrp -q -v Res_preset`;
if($get_preset_r=="HD 1080P"){intField -e -v 1920 the_w;intField -e -v 1080 the_h;}
if($get_preset_r=="HD 720P"){intField -e -v 1280 the_w;intField -e -v 720 the_h;}
if($get_preset_r=="640*480"){intField -e -v 640 the_w;intField -e -v 480 the_h;}
if($get_preset_r=="1k square"){intField -e -v 1024 the_w;intField -e -v 1024 the_h;}
if($get_preset_r=="2k square"){intField -e -v 2048 the_w;intField -e -v 2048 the_h;}
if($get_preset_r=="3k square"){intField -e -v 3072 the_w;intField -e -v 3072 the_h;}
if($get_preset_r=="4k square"){intField -e -v 4096 the_w;intField -e -v 4096 the_h;}
}

//注：浏览

global proc browse_path()
{
		string $getPath = `textField -q -text path_loc`;
		global string $gDefaultFileBrowserDir;
		$gDefaultFileBrowserDir= fromNativePath($getPath);
		fileBrowser( "browseFolder_rl(0)", "Project", "", 4 );	
		
}
global proc int browseFolder_rl(int $mode,string $dirpath,string $type) 
{
	
	if ($mode==0){
		 textField -e -text (toNativePath($dirpath)+"\\") path_loc;
		return true;	
	}
	
	else if  ($mode==1){
		 textField -e -text (toNativePath($dirpath)) path_loc;
		return true;	
		
	}
}

//注：查询AOVs
global proc string getAOV()
{

string $the_AOVs_arr[];
clear $the_AOVs_arr;
int $num_AOVs=0;
if(`objExists defaultArnoldDriver`)
{
string $listC_arnold[]=`listConnections  defaultArnoldDriver`;

for ($crs4=0;$crs4<`size($listC_arnold)`;$crs4++){
if(`match "aiAOV_*" $listC_arnold[$crs4]`!="")
{
if(`getAttr ($listC_arnold[$crs4]+".enabled")`){$num_AOVs++;
$the_AOVs_arr[$num_AOVs-1] = `substring $listC_arnold[$crs4] 7 (size($listC_arnold[$crs4]))`;}}}}
string $res=stringArrayToString($the_AOVs_arr,",");
return $res;
} 
//注：查询AOVs数组
global proc string[] getAOVarr()
{

string $the_AOVs_arr[];
clear $the_AOVs_arr;
int $num_AOVs=0;
if(`objExists defaultArnoldDriver`)
{
string $listC_arnold[]=`listConnections  defaultArnoldDriver`;

for ($crs4=0;$crs4<`size($listC_arnold)`;$crs4++){
if(`match "aiAOV_*" $listC_arnold[$crs4]`!="")
{if(`getAttr ($listC_arnold[$crs4]+".enabled")`){$num_AOVs++;
$the_AOVs_arr[$num_AOVs-1] = `substring $listC_arnold[$crs4] 7 (size($listC_arnold[$crs4]))`;}}}}
return $the_AOVs_arr;
} 
//注：查询AOVs数组2
global proc string getAOVarr2()
{

string $the_AOVs_arr[];
clear $the_AOVs_arr;
int $num_AOVs=0;
int $ifbeauty=0;
if(`objExists defaultArnoldDriver`)
{
string $listC_arnold[]=`listConnections  defaultArnoldDriver`;

for ($crs4=0;$crs4<`size($listC_arnold)`;$crs4++){
if(`match "aiAOV_*" $listC_arnold[$crs4]`!="")
{if(`getAttr ($listC_arnold[$crs4]+".enabled")`){$num_AOVs++;
}if($num_AOVs==0){$ifbeauty=1;}else{$ifbeauty=0;}}}}
return $ifbeauty;
}
//注：查询PASS数组

global proc string[] getPASSarr(string $RLN){
   string $getPass[];
   if(`objExists ($RLN+".renderPass")`){
    $getPass=`listConnections ($RLN+".renderPass")`;}
return $getPass;
}

//注：打开输出目录

global proc openImagesFolder(){
    string $loc=`textField -q -tx path_loc`;
    string $the_output_path_L=`fromNativePath($loc)`;
    string $path=`toNativePath $loc`;
    sysFile -makeDir $the_output_path_L;
    system ("start explorer \""+$path+"\"");
}
//注：上下箭头控制
global proc arrow_ctrl_RU(){
    if(`button -q -l button_RU`=="↓"){button -e -l "-" button_RU;}else{button -e -l "↓" button_RU;}
}
global proc arrow_ctrl_CA(){
    if(`button -q -l button_CA`=="↓"){button -e -l "-" button_CA;}else{button -e -l "↓" button_CA;}
}
global proc arrow_ctrl_IF(){
    if(`button -q -l button_IF`=="↓"){button -e -l "-" button_IF;}else{button -e -l "↓" button_IF;}
}
global proc arrow_ctrl_COM(){
    if(`button -q -l button_COM`=="↓"){button -e -l "-" button_COM;}else{button -e -l "↓" button_COM;}
}
global proc arrow_ctrl_SEF(){
    if(`button -q -l button_SEF`=="↓"){button -e -l "-" button_SEF;}else{button -e -l "↓" button_SEF;}
}
//注：上下箭头控制菜单显示 
global proc arrow_ctrl_menu_RU(string $allRenderLayer[],int $num_Layer){
    if(`button -q -l button_RU`=="-")
    {for($i_RU=0;$i_RU<$num_Layer-1;$i_RU++)
    {optionMenuGrp -e -en 0 ("witch_render_"+$allRenderLayer[$i_RU]);}
    }
    else{for($i_RU=0;$i_RU<$num_Layer-1;$i_RU++)
    {optionMenuGrp -e -en 1 ("witch_render_"+$allRenderLayer[$i_RU]);}
    }
}

global proc arrow_ctrl_menu_CA(string $allRenderLayer[],int $num_Layer){
    if(`button -q -l button_CA`=="-")
    {for($i_CA=0;$i_CA<$num_Layer-1;$i_CA++)
    {optionMenuGrp -e -en 0 ("witch_the_camera_"+$allRenderLayer[$i_CA]);}
    }
    else{for($i_CA=0;$i_CA<$num_Layer-1;$i_CA++)
    {optionMenuGrp -e -en 1 ("witch_the_camera_"+$allRenderLayer[$i_CA]);}
    }
}
global proc arrow_ctrl_menu_IF(string $allRenderLayer[],int $num_Layer){
    if(`button -q -l button_IF`=="-")
    {for($i_IF=0;$i_IF<$num_Layer-1;$i_IF++)
    {optionMenuGrp -e -en 0 ("witch_the_format_"+$allRenderLayer[$i_IF]);}
    }
    else{for($i_IF=0;$i_IF<$num_Layer-1;$i_IF++)
    {optionMenuGrp -e -en 1 ("witch_the_format_"+$allRenderLayer[$i_IF]);}
    }
}
global proc arrow_ctrl_menu_COM(string $allRenderLayer[],int $num_Layer){
    if(`button -q -l button_COM`=="-")
    {for($i_COM=0;$i_COM<$num_Layer-1;$i_COM++)
    {optionMenuGrp -e -en 0 ("witch_the_compression_"+$allRenderLayer[$i_COM]);}
    }
    else{for($i_COM=0;$i_COM<$num_Layer-1;$i_COM++)
    {optionMenuGrp -e -en 1 ("witch_the_compression_"+$allRenderLayer[$i_COM]);}
    }
}
global proc arrow_ctrl_menu_SEF(string $allRenderLayer[],int $num_Layer){
    if(`button -q -l button_SEF`=="-")
    {for($i_SEF=0;$i_SEF<$num_Layer-1;$i_SEF++)
    {intField -e -en 0 ("startFrame_"+$allRenderLayer[$i_SEF]);intField -e -en 0 ("endFrame_"+$allRenderLayer[$i_SEF]);}
    }
    else{for($i_SEF=0;$i_SEF<$num_Layer-1;$i_SEF++)
    {intField -e -en 1 ("startFrame_"+$allRenderLayer[$i_SEF]);intField -e -en 1 ("endFrame_"+$allRenderLayer[$i_SEF]);}
    }
}

global proc cb_ctrl_menu_RU(){
    
    string $allRenderLayer[]=`ls    -type "renderLayer"`;
    string $temp_rf_rl[]=`ls  -rn -type "renderLayer"`;
$allRenderLayer=`stringArrayRemove $temp_rf_rl $allRenderLayer`;
if(size($allRenderLayer)==1){
duplicate -inputConnections defaultRenderLayer;renderLayerEditorItemOnRename "defaultRenderLayer1" "UFR_Renderlayer";}setAttr "defaultRenderLayer.renderable" 0;
    
$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
    
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;
    
string $temp_arr2[];

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
    if(`checkBox -q -v cb_RU`==0)
    {for($i_RU=0;$i_RU<$num_Layer;$i_RU++)
    {optionMenuGrp -e -en 0 ("witch_render_"+$allRenderLayer[$i_RU]);}
    }
    if(`checkBox -q -v cb_RU`==1)
    {for($i_RU=0;$i_RU<$num_Layer;$i_RU++)
    {optionMenuGrp -e -en 1 ("witch_render_"+$allRenderLayer[$i_RU]);}
    }
}

global proc cb_ctrl_menu_CA(){
   string $allRenderLayer[]=`ls   -type "renderLayer"`;
   
$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
    
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
    if(`checkBox -q -v cb_CA`==0)
    {for($i_CA=0;$i_CA<$num_Layer;$i_CA++)
    {optionMenuGrp -e -en 0 ("witch_the_camera_"+$allRenderLayer[$i_CA]);}
    }
    if(`checkBox -q -v cb_CA`==1)
    {for($i_CA=0;$i_CA<$num_Layer;$i_CA++)
    {optionMenuGrp -e -en 1 ("witch_the_camera_"+$allRenderLayer[$i_CA]);}
    }
}

global proc cb_ctrl_menu_IF(){
    string $allRenderLayer[]=`ls   -type "renderLayer"`;
    
$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
    
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
    if(`checkBox -q -v cb_IF`==0)
    {for($i_IF=0;$i_IF<$num_Layer;$i_IF++)
    {optionMenuGrp -e -en 0 ("witch_the_format_"+$allRenderLayer[$i_IF]);}
    }
    if(`checkBox -q -v cb_IF`==1)
    {for($i_IF=0;$i_IF<$num_Layer;$i_IF++)
    {optionMenuGrp -e -en 1 ("witch_the_format_"+$allRenderLayer[$i_IF]);}
    }
}

global proc cb_ctrl_menu_SEF(){
    string $allRenderLayer[]=`ls    -type "renderLayer"`;
    string $temp_rf_rl[]=`ls  -rn -type "renderLayer"`;
$allRenderLayer=`stringArrayRemove $temp_rf_rl $allRenderLayer`;
if(size($allRenderLayer)==1){
duplicate -inputConnections defaultRenderLayer;renderLayerEditorItemOnRename "defaultRenderLayer1" "UFR_Renderlayer";}setAttr "defaultRenderLayer.renderable" 0;
    
$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
    
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
    if(`checkBox -q -v cb_SEF`==0)
    {for($i_SEF=0;$i_SEF<$num_Layer;$i_SEF++)
    {intField  -e -ed 0 ("startFrame_"+$allRenderLayer[$i_SEF]);
    intField  -e -ed 0 ("endFrame_"+$allRenderLayer[$i_SEF]);}
    }
    if(`checkBox -q -v cb_SEF`==1)
    {for($i_SEF=0;$i_SEF<$num_Layer;$i_SEF++)
    {intField  -e -ed 1 ("startFrame_"+$allRenderLayer[$i_SEF]);
    intField  -e -ed 1 ("endFrame_"+$allRenderLayer[$i_SEF]);}
    }
}

global proc cb_ctrl_menu_FNP(){
    string $allRenderLayer[]=`ls   -type "renderLayer"`;
    
$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
    
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
    if(`checkBox -q -v cb_FNP`==0)
    {for($i_FNP=0;$i_FNP<$num_Layer;$i_FNP++)
    {textField  -e -ed 0 ("fileName_"+$allRenderLayer[$i_FNP]);}
    }
    if(`checkBox -q -v cb_FNP`==1)
    {for($i_FNP=0;$i_FNP<$num_Layer;$i_FNP++)
    {textField  -e -ed 1 ("fileName_"+$allRenderLayer[$i_FNP]);}
    }
}
//注：设置四checkbox
global proc setCheckBox(string $allRenderLayer[],int $num_Layer)
{
 int $temp_bbb=ifEnOf4($allRenderLayer,$num_Layer)  ; 
 int $temp_ccc=ifEnOf_delay($allRenderLayer,$num_Layer);
 int $temp_ddd = ifEnOf_mp($allRenderLayer,$num_Layer);
rowColumnLayout -e -en $temp_bbb the4box;
checkBox -e -en  $temp_bbb cb_m_aovs;
//textField -e -en  $temp_ccc the_dl;
//text -e -en  $temp_ccc tx_delay;
checkBox -e -en  $temp_ddd cb_m_passes;
}

////日志窗口综合
global proc open_log_window()
{

string $loc=`textField -q -tx path_loc`;
string $loc_L=`fromNativePath $loc`;
string $the_scene_name=`getTheSceneName`;
string $all_log[]=`getFileList -folder ($loc_L+"render_log/"+$the_scene_name+"/") -filespec "*.txt"`;

string $log_file_loac=($loc_L+"render_log/"+$the_scene_name+"/"+$all_log[size($all_log)-1]);
python("f=open('"+$log_file_loac+"','r')");
string $log_read=python ("f.read()");
python("f.close()");




if(`window -ex log_win`) deleteUI log_win; 

window -title "Log of render" -sizeable 0 log_win ;
rowColumnLayout -numberOfColumns 1  -p log_win layout_log;
scrollField -ww 0 -fn "fixedWidthFont" -w 760 -h 700 -tx $log_read -ed 0  log_render;
setParent layout_log;
rowColumnLayout -h 7;
 setParent ..;  
rowColumnLayout -numberOfColumns 11 -cw 1 70 -cw 2 50 -cw 3 20 -cw 4 50 -cw 5 10 -cw 6 120 -cw 7 20 -cw 8 120 -cw 9 20 -cw 10 80 ;
text -vis 0 -l $all_log[size($all_log)-1] temp_name_log;


//iconTextButton -st "iconOnly" -i  "timeend.png" -c first_log_g first_iconB;
text -l " ";
//iconTextButton -st "iconOnly" -i  "timerev.png" -c back_log_g back_iconB;
//if(size($all_log)-1==0){
//    iconTextButton -e -en 0  first_iconB;
//    iconTextButton -e -en 0  back_iconB;
//}
text -l " ";
//iconTextButton -en 0 -st "iconOnly" -i  "timeplaySequencer.png" -c next_log_g next_iconB;
text -l " ";
//iconTextButton -en 0 -st "iconOnly" -i  "timestart.png" -c last_log_g last_iconB;
text -l " ";
//iconTextButton -st "iconOnly" -i  "SP_DirOpenIcon.png" -c openLogsFolder;
button  -l "Open Render Log" -c openLogsFolder;
text -l " ";
button  -l "Open Render Image" -c openImagesFolderNew;
 setParent ..;  
 rowColumnLayout -h 7;
 setParent ..;  
showWindow log_win;


}
////
global proc openlog(){
string $loc=`textField -q -tx path_loc`;
string $loc_L=`fromNativePath $loc`;
string $the_scene_name=`getTheSceneName`;
string $all_log[]=`getFileList -folder ($loc_L+"render_log/"+$the_scene_name+"/") -filespec "*.txt"`;
if (size($all_log)==0){print "##此场景无任何渲染日志！##\n";if(`window -ex log_win`) deleteUI log_win;}
else{open_log_window;}
}

  global proc openLogsFolder(){
    
    
    string $defaultLocation_temp= `workspace -en images`;
string $defaultLocation= toNativePath($defaultLocation_temp);
    string $loc=$defaultLocation+"\\";
   string $the_scene_name=`getTheSceneName`;
 string $path2=($loc+"render_log\\"+$the_scene_name);
   
    system ("start explorer \""+$path2+"\"");
}
 //////////////    
       global proc openImagesFolderNew(){
    
    
    string $defaultLocation_temp= `workspace -en images`;
string $defaultLocation= toNativePath($defaultLocation_temp);
    string $loc=$defaultLocation+"\\";
   string $the_scene_name=`getTheSceneName`;
 string $path55=($loc+$the_scene_name);
   
    system ("start explorer \""+$path55+"\"");
}

  
  //////////
  global proc back_log_g()
{  string $loc=`textField -q -tx path_loc`;
string $loc_L=`fromNativePath $loc`;
string $the_scene_name=`getTheSceneName`;
string $all_log[]=`getFileList -folder ($loc_L+"render_log/"+$the_scene_name+"/") -filespec "*.txt"`;
 string $temp_l_n= `text -q -l temp_name_log`;
 int $back_log=getIndex2($all_log,$temp_l_n)-1;
string $log_file_loac=($loc_L+"render_log/"+$the_scene_name+"/"+$all_log[$back_log]);
python("f=open('"+$log_file_loac+"','r')");
string $log_read=python ("f.read()");
python("f.close()");


  scrollField -e -tx $log_read -ed 0  log_render;
  text -e -l $all_log[$back_log] temp_name_log;
  if ($all_log[$back_log]==$all_log[0]){iconTextButton -e -en 0 back_iconB;iconTextButton -e -en 0 first_iconB;}
  iconTextButton -e -en 1 next_iconB;iconTextButton -e -en 1 last_iconB;
}
    //////
    global proc next_log_g()
{  string $loc=`textField -q -tx path_loc`;
string $loc_L=`fromNativePath $loc`;
string $the_scene_name=`getTheSceneName`;
string $all_log[]=`getFileList -folder ($loc_L+"render_log/"+$the_scene_name+"/") -filespec "*.txt"`;
 string $temp_l_n= `text -q -l temp_name_log`;
 int $back_log=getIndex2($all_log,$temp_l_n)+1;
string $log_file_loac=($loc_L+"render_log/"+$the_scene_name+"/"+$all_log[$back_log]);
python("f=open('"+$log_file_loac+"','r')");
string $log_read=python ("f.read()");
python("f.close()");


  scrollField -e -tx $log_read -ed 0  log_render;
  text -e -l $all_log[$back_log] temp_name_log;
  if ($all_log[$back_log]==$all_log[size($all_log)-1]){iconTextButton -e -en 0 next_iconB;iconTextButton -e -en 0 last_iconB;}
  iconTextButton -e -en 1 back_iconB;iconTextButton -e -en 1 first_iconB;
}
  /////
     global proc first_log_g()
{  string $loc=`textField -q -tx path_loc`;
string $loc_L=`fromNativePath $loc`;
string $the_scene_name=`getTheSceneName`;
string $all_log[]=`getFileList -folder ($loc_L+"render_log/"+$the_scene_name+"/") -filespec "*.txt"`;

string $log_file_loac=($loc_L+"render_log/"+$the_scene_name+"/"+$all_log[0]);
python("f=open('"+$log_file_loac+"','r')");
string $log_read=python ("f.read()");
python("f.close()");


  scrollField -e -tx $log_read -ed 0  log_render;
  text -e -l $all_log[0] temp_name_log;

  iconTextButton -e -en 0 back_iconB;iconTextButton -e -en 0 first_iconB;
  iconTextButton -e -en 1 next_iconB;iconTextButton -e -en 1 last_iconB;
}
  
  ///////////
   global proc last_log_g()
{  string $loc=`textField -q -tx path_loc`;
string $loc_L=`fromNativePath $loc`;
string $the_scene_name=`getTheSceneName`;
string $all_log[]=`getFileList -folder ($loc_L+"render_log/"+$the_scene_name+"/") -filespec "*.txt"`;

string $log_file_loac=($loc_L+"render_log/"+$the_scene_name+"/"+$all_log[size($all_log)-1]);
python("f=open('"+$log_file_loac+"','r')");
string $log_read=python ("f.read()");
python("f.close()");


  scrollField -e -tx $log_read -ed 0  log_render;
  text -e -l $all_log[size($all_log)-1] temp_name_log;

  iconTextButton -e -en 1 back_iconB;iconTextButton -e -en 1 first_iconB;
  iconTextButton -e -en 0 next_iconB;iconTextButton -e -en 0 last_iconB;
}
  

//注：读取摄像机
global proc string loadTheCurrentCamera(){
 string $all_cameras[] = `listCameras`;
 string $the_camera;
 int $no_ca=0;
 for($witch_camera in $all_cameras)
 {string $temp_shape_camera[]=`listRelatives -s $witch_camera`;

  if(`getAttr($temp_shape_camera[0]+".renderable")`==1){$the_camera=$witch_camera;$no_ca=1;}}
  if ($no_ca==0){confirmDialog -icn "question"  -title "无可渲染的摄像机 " -message "   无可渲染的摄像机，请检查相机的Renderable属性是否勾选 "
    -button "No" 
    -cancelButton "No" -dismissString "No";}
  
  
  
  
  return $the_camera;}
//注：建立摄像机菜单目录
global proc cameraOptionMenu_RL(int $CSR_2,string $allRenderLayer[]) {
   string $all_cameras[] = `listCameras`;
 optionMenuGrp   -en 0  -cc "changeInfoOfRender" ("witch_the_camera_"+$allRenderLayer[$CSR_2]);
 for($witch_camera in $all_cameras){
 menuItem  -label $witch_camera;}

}
//注：建立图片格式菜单目录
global proc formatOptionMenu_RL(int $CSR_2,string $allRenderLayer[]) {
  string $getRDN= ` optionMenuGrp -q -v ("witch_render_"+$allRenderLayer[$CSR_2])`;
 
 optionMenuGrp  -en 0 -bgc 0.3 0.3 0.3 -cc ("changeInfoOfRender;set6cb();changeFF(\""+$allRenderLayer[$CSR_2]+"\")") ("witch_the_format_"+$allRenderLayer[$CSR_2]);


   menuItem -en 0 -label "exr(16bit)" ("witch_the_format_exr16"+$allRenderLayer[$CSR_2]);
   menuItem -en 0 -label "exr(32bit)" ("witch_the_format_exr32"+$allRenderLayer[$CSR_2]);
   menuItem -en 0 -label "deepexr" ("witch_the_format_deepexr"+$allRenderLayer[$CSR_2]);
    menuItem -label "PNG(png)" ("witch_the_format_png"+$allRenderLayer[$CSR_2]);
    menuItem  -label "Targa(tga)" ("witch_the_format_tga"+$allRenderLayer[$CSR_2]);
  menuItem -label "TIFF(tif)" ("witch_the_format_tif"+$allRenderLayer[$CSR_2]);
  menuItem -label "maya(iff)" ("witch_the_format_iff"+$allRenderLayer[$CSR_2]);
   menuItem -en 0 -label "Unsupport!!" ("witch_the_format_us"+$allRenderLayer[$CSR_2]);



       

  optionMenuGrp -e -v "PNG(png)" ("witch_the_format_"+$allRenderLayer[$CSR_2]);


}
global proc changeFF(string $CRL){
    
    string $temp_fm= `optionMenuGrp  -q -v  ("witch_the_format_"+$CRL)`;
    int $temp_if;
    if($temp_fm=="exr(16bit)")
    {$temp_if=`menuItem -q -en ("witch_the_format_exr16"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
     }
     
    if($temp_fm=="exr(32bit)")
    {$temp_if=`menuItem -q -en ("witch_the_format_exr32"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="deepexr")
    {$temp_if=`menuItem -q -en ("witch_the_format_deepexr"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="PNG(png)")
    {$temp_if=`menuItem -q -en ("witch_the_format_png"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="Targa(tga)")
    {$temp_if=`menuItem -q -en ("witch_the_format_tga"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="TIFF(tif)")
    {$temp_if=`menuItem -q -en ("witch_the_format_tif"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e  -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="maya(iff)")
    {$temp_if=`menuItem -q -en ("witch_the_format_iff"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e  -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
 
    }
//注意：检查不支持的选项

global proc changeRUred(string $CRL){
    optionMenuGrp -e  -bgc 0.3 0.3 0.3 ("witch_render_"+$CRL);
}

global proc check_error(string $allRenderLayer[]){
    
    for ($CRL in $allRenderLayer)
    {
        string $temp_fm=`optionMenuGrp -q -v ("witch_the_format_"+$CRL)`;
         int $temp_if;
          if($temp_fm=="exr(16bit)")
    {$temp_if=`menuItem -q -en ("witch_the_format_exr16"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
     }
     
    if($temp_fm=="exr(32bit)")
    {$temp_if=`menuItem -q -en ("witch_the_format_exr32"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="deepexr")
    {$temp_if=`menuItem -q -en ("witch_the_format_deepexr"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="PNG(png)")
    {$temp_if=`menuItem -q -en ("witch_the_format_png"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="Targa(tga)")
    {$temp_if=`menuItem -q -en ("witch_the_format_tga"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="TIFF(tif)")
    {$temp_if=`menuItem -q -en ("witch_the_format_tif"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e  -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    if($temp_fm=="maya(iff)")
    {$temp_if=`menuItem -q -en ("witch_the_format_iff"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e  -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    
     if($temp_fm=="Unsupport!!")
    {$temp_if=`menuItem -q -en ("witch_the_format_us"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_the_format_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e  -bgc 0.3 0.3 0.3 ("witch_the_format_"+$CRL);
                    } 
    }
    
    }
    

    
}

global proc check_error2(string $allRenderLayer[]){
    
    for ($CRL in $allRenderLayer)
    {
        string $temp_fm=`optionMenuGrp -q -v ("witch_render_"+$CRL)`;
         int $temp_if;
   
     if($temp_fm=="Unsupport Render!!")
    {$temp_if=`menuItem -q -en ("UsRender_"+$CRL)`;
      if ($temp_if==0){
                optionMenuGrp -e  -bgc 0.8 0 0 ("witch_render_"+$CRL);
                    }
    if ($temp_if==1){
                optionMenuGrp -e  -bgc 0.3 0.3 0.3 ("witch_render_"+$CRL);
                    } 
    }
    
    }
    

    
}
global proc int check_error3(string $allRenderLayer[]){
$if_thereis_red=0;
int $if_interrupt=0;
int $temp_CD=1-(`getAttr "defaultRenderLayer.renderable"`);
setAttr "defaultRenderLayer.renderable" ($temp_CD);
setAttr "defaultRenderLayer.renderable" (1-$temp_CD);
string $allRenderLayer[]=`ls    -type "renderLayer"`;
string $temp_rf_rl[]=`ls  -rn -type "renderLayer"`;
$allRenderLayer=`stringArrayRemove $temp_rf_rl $allRenderLayer`;
if(size($allRenderLayer)==1){
duplicate -inputConnections defaultRenderLayer;renderLayerEditorItemOnRename "defaultRenderLayer1" "UFR_Renderlayer";}
setAttr "defaultRenderLayer.renderable" 0;

$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
  
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
    
    
    for ($CRL in $allRenderLayer)
    {
    float $check_red1[]=`optionMenuGrp -q  -bgc ("witch_render_"+$CRL)`;
    if ($check_red1[0]==0.8){$if_thereis_red=1; }
    float $check_red2[]=`optionMenuGrp -q  -bgc ("witch_the_format_"+$CRL)`;
    if ($check_red2[0]==0.8){$if_thereis_red=1;}
    }
    return $if_thereis_red;
}

    
//注：确定UI隐藏与否
global proc string ifEnOf4(string $allRenderLayer[],int $num_Layer)
{ int $ifAR;
for ($oo=0;$oo<$num_Layer;$oo++)
{
string $ifar=`optionMenuGrp -q -v  ("witch_render_"+$allRenderLayer[$oo])`;
string $ifexr=`optionMenuGrp -q -v  ("witch_the_format_"+$allRenderLayer[$oo])`;
if($ifar=="arnold"&&$ifexr=="exr(32bit)")
{$ifAR=1;}
if($ifar=="arnold"&&$ifexr=="exr(16bit)")
{$ifAR=1;}
}
return $ifAR;}

global proc string ifEnOf_delay(string $allRenderLayer[],int $num_Layer)
{ int $ifAR;
for ($oo=0;$oo<$num_Layer;$oo++)
{
string $ifar=`optionMenuGrp -q -v  ("witch_render_"+$allRenderLayer[$oo])`;
string $ifexr=`optionMenuGrp -q -v  ("witch_the_format_"+$allRenderLayer[$oo])`;
if($ifar=="arnold")
{$ifAR=1;}
if($ifar=="arnold")
{$ifAR=1;}
}
return $ifAR;}

global proc string ifEnOf_mp(string $allRenderLayer[],int $num_Layer)
{ int $ifAR;
for ($oo=0;$oo<$num_Layer;$oo++)
{
string $ifar=`optionMenuGrp -q -v  ("witch_render_"+$allRenderLayer[$oo])`;
string $ifexr=`optionMenuGrp -q -v  ("witch_the_format_"+$allRenderLayer[$oo])`;
if($ifar=="mentalRay"&&$ifexr=="exr(32bit)")
{$ifAR=1;}
if($ifar=="mentalRay"&&$ifexr=="exr(16bit)")
{$ifAR=1;}
}
return $ifAR;}

//注：建立图片压缩方式菜单目录
global proc compressionOptionMenu_RL(int $CSR_2,string $allRenderLayer[]) {
  
 optionMenuGrp -vis 0 -en 0 ("witch_the_compression_"+$allRenderLayer[$CSR_2]);
 
 menuItem -label "none";
  menuItem -label "RLE";
   menuItem -label "PIZ";
    menuItem -label "ZIP";
  
     
optionMenuGrp -e -v "none" ("witch_the_compression_"+$allRenderLayer[$CSR_2]);
}
//注：pad

global proc string FileNum(int $padding,string $num_1) {
    global int $traPadding;
    $traPadding=$padding;
    global string $num_2;
    $num_2=$num_1;
    python ("import maya.cmds as cmds");
    python ("import maya.mel as mel");
    python ("Padding = mel.eval('$null_FY=$traPadding')");
    python ("num_1 = mel.eval('$null_FY2=$num_2')");
    python ("subNum = Padding - len(num_1)");
    string $fileNum = "";
    int $subNum = python ("Padding - len(num_1)");
    $fileNum = python ("'0'*subNum+num_1");
        
    
    return $fileNum;
}


//注：获取所有帧
global proc int getAllF()
{
string $allRenderLayer[]=`ls   -type "renderLayer"`;

$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
    
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
int $the_start_frame;
int $the_end_frame;
int $opq[];
int $opq2;
for ($final_2=0;$final_2<$num_Layer;$final_2++)
{
 $the_start_frame=`intField -q -v ("startFrame_"+$allRenderLayer[$final_2])`;
 $the_end_frame=`intField -q -v ("endFrame_"+$allRenderLayer[$final_2])`;
 if(`checkBox -q -v ("if_render_"+$allRenderLayer[$final_2])`==1)
 {$opq[$final_2]=($the_end_frame+1-$the_start_frame);
 $opq2+=$opq[$final_2];
 }
 }
 
 return $opq2;
}

//注：打开对应层的渲染设置
global proc open_render_setting(){
 string $getRL_temp=`iconTextRadioCollection -q -sl  witch_RL_sl`;
 string $getRL=`substring $getRL_temp 8 (size($getRL_temp))`;
 editRenderLayerGlobals -crl $getRL;

unifiedRenderGlobalsWindow;
}  
//注：改写MR exr
global proc changeEXR(){
     optionMenuGrp -e -v "OpenEXR (exr)" imageMenuMentalRay;
     
    }
//注：建立起始帧文本格
global proc startFrameOptionTx_RL(int $CSR_2,string $allRenderLayer[]) {
int $ts=`getSFofRL($allRenderLayer[$CSR_2])`;
intField  -ed 0 -cc ("changeInfoOfRender;changeF(\""+$allRenderLayer[$CSR_2]+"\")")  -v $ts ("startFrame_"+$allRenderLayer[$CSR_2]);}
//注明:改变起始帧进程

   global proc changeF(string $CRL){
    
    int $the_start_frame=`intField -q -v ("startFrame_"+$CRL)`;
    int $the_end_frame=`intField -q -v ("endFrame_"+$CRL)`;
    text -e -l $the_start_frame ("sf_proc_"+$CRL);
    text -e -l $the_end_frame ("ef_proc_"+$CRL);
    }
//注：建立结束帧文本格
global proc endFrameOptionTx_RL(int $CSR_2,string $allRenderLayer[]) {
int $te=`getEFofRL($allRenderLayer[$CSR_2])`;
intField  -ed 0 -cc ("changeInfoOfRender;changeF(\""+$allRenderLayer[$CSR_2]+"\")")  -v $te ("endFrame_"+$allRenderLayer[$CSR_2]);}
//注：提取场景名
global proc string getTheSceneName(){
 string $allname_scene=`file  -q -sn`; 
 string $allname_scene_base; 
 if($allname_scene!=""){
 $allname_scene_base= `basenameEx($allname_scene)`;}
 else{$allname_scene_base="untitled";}
 return $allname_scene_base;

} 
//注：建立文件名文本格


global proc fileNameOptionTx_RL(int $CSR_2,string $allRenderLayer[]) {
textField -cc "changeInfoOfRender();" -ed 0 -fn "boldLabelFont" -tx $allRenderLayer[$CSR_2]  ("fileName_"+$allRenderLayer[$CSR_2]);}
//注：读取场景信息最新


global proc string getSFofRL(string $name_renderlayer)
{
    string $thetime=`optionVar -q  workingUnitTime`;
    float $fps_r;
    if($thetime=="film"){$fps_r=24;}
    if($thetime=="game"){$fps_r=15;}
    if($thetime=="pal"){$fps_r=25;}
    if($thetime=="ntsc"){$fps_r=30;}
    if($thetime=="show"){$fps_r=48;}
    if($thetime=="palf"){$fps_r=50;}

    float $thesf;
    if(stringArrayCount("defaultRenderGlobals.startFrame", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==0)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$thesf=`getAttr defaultRenderGlobals.startFrame`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 "defaultRenderLayer"`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                         float $temp_if;
                          if($temp_c[0]=="defaultRenderGlobals.startFrame")
                             { 
                               $temp_if=1;
                               float $a1=`getAttr ($temp_c2+"value")`;
                               float $a2= $a1*$fps_r;
                               float $a3=`trunc ($a2)`;
                               
                             
                               if(`abs($a2)`-`abs($a3)`>0.5)
                               {$thesf=`trunc $a2`+`sign($a1)`;}
                               if(`abs($a2)`-`abs($a3)`<0.5)
                               {
                                $thesf=`trunc $a2`;}
                              
                             }
                          if($temp_if==0){$thesf=`getAttr "defaultRenderGlobals.startFrame"`;}
                        } 
            }
  
     }

     else
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$thesf=`getAttr defaultRenderGlobals.startFrame`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 $name_renderlayer`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                           if($temp_c[0]=="defaultRenderGlobals.startFrame")
                             { 
                               float $a1=`getAttr ($temp_c2+"value")`;
                               float $a2= $a1*$fps_r;
                               float $a3=`trunc ($a2)`;
                               
                             
                               if(`abs($a2)`-`abs($a3)`>0.5)
                               {
                                   $thesf=`trunc $a2`+sign($a1);}
                               if(`abs($a2)`-`abs($a3)`<0.5)
                               {
                                $thesf=`trunc $a2`;}
                              
                             }
                        
                             
                        }
            }
   
     }
     
     
     
     
     
    return $thesf;
}




global proc string getEFofRL(string $name_renderlayer)
{
    string $thetime=`optionVar -q  workingUnitTime`;
    float $fps_r;
    if($thetime=="film"){$fps_r=24;}
    if($thetime=="game"){$fps_r=15;}
    if($thetime=="pal"){$fps_r=25;}
    if($thetime=="ntsc"){$fps_r=30;}
    if($thetime=="show"){$fps_r=48;}
    if($thetime=="palf"){$fps_r=50;}

    float $thesf;
    if(stringArrayCount("defaultRenderGlobals.endFrame", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==0)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$thesf=`getAttr defaultRenderGlobals.endFrame`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 "defaultRenderLayer"`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                         float $temp_if;
                          if($temp_c[0]=="defaultRenderGlobals.endFrame")
                             { 
                               $temp_if=1;
                               float $a1=`getAttr ($temp_c2+"value")`;
                               float $a2= $a1*$fps_r;
                               float $a3=`trunc ($a2)`;
                               
                             
                               if(`abs($a2)`-`abs($a3)`>0.5)
                               {$thesf=`trunc $a2`+`sign($a1)`;}
                               if(`abs($a2)`-`abs($a3)`<0.5)
                               {
                                $thesf=`trunc $a2`;}
                              
                             }
                          if($temp_if==0){$thesf=`getAttr "defaultRenderGlobals.endFrame"`;}
                        } 
            }
  
     }

     else
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$thesf=`getAttr defaultRenderGlobals.endFrame`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 $name_renderlayer`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                           if($temp_c[0]=="defaultRenderGlobals.endFrame")
                             { 
                               float $a1=`getAttr ($temp_c2+"value")`;
                               float $a2= $a1*$fps_r;
                               float $a3=`trunc ($a2)`;
                               
                             
                               if(`abs($a2)`-`abs($a3)`>0.5)
                               {
                                   $thesf=`trunc $a2`+sign($a1);}
                               if(`abs($a2)`-`abs($a3)`<0.5)
                               {
                                $thesf=`trunc $a2`;}
                              
                             }
                        
                             
                        }
            }
   
     }
     
     
     
     
     
    return $thesf;
}




global proc string getURofRL(string $name_renderlayer)
{
    

    string $theUR;
    if(stringArrayCount("defaultRenderGlobals.currentRenderer", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==0)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$theUR=`getAttr defaultRenderGlobals.currentRenderer`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 "defaultRenderLayer"`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                          float $temp_if_3;
                         if(stringArrayCount("defaultRenderGlobals.currentRenderer",$temp_c)==1)
                             {
                               $temp_if_3=1;
                               string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                               $theUR=`getAttr ($temp_c2+"value")`;
                             
                             }
                           if($temp_if_3==0){$theUR=`getAttr "defaultRenderGlobals.currentRenderer"`;}  
                             
                        }
            }
          
     }
     
    if(stringArrayCount("defaultRenderGlobals.currentRenderer", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==1)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$theUR=`getAttr defaultRenderGlobals.currentRenderer`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 $name_renderlayer`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         if(stringArrayCount("defaultRenderGlobals.currentRenderer",$temp_c)==1)
                             {
                               string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                               $theUR=`getAttr ($temp_c2+"value")`;
                              
                             }
                        }
            }
    
     }
    

     
    if   (stringArrayCount($theUR,{"arnold","mentalRay","mayaSoftware","vray"})==0)
    {
        $theUR="Unsupport Render!!";
    }
     
   
    return $theUR;
}

global proc string getIM_v(string $name_renderlayer){
  string $temp_v;
  string $theIFM;

  if(`getURofRL($name_renderlayer)`=="vray")
  {
      
 
      
if(stringArrayCount("vraySettings.imageFormatStr", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==0)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$theIFM=`optionMenuGrp -q -v vrayImageFormatMenu`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 "defaultRenderLayer"`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         float $temp_if_4=0;
                         if(stringArrayCount("vraySettings.imageFormatStr",$temp_c)==1)
                             {
                               $temp_if_4=1;
                               string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                               $theIFM=`getAttr ($temp_c2+"value")`;
                               
                             }
                         if($temp_if_4==0){string $get_final_p[]=`listConnections -p 1  vraySettings.imageFormatStr`;
                         if(size($get_final_p)==0){$theIFM=`getAttr vraySettings.imageFormatStr`;}
                        for ($test_v in $get_final_p){
                if(`match ($name_renderlayer+"\.adjustments\[[0-9]*\].plug") $test_v`!="")
                                {
                   $temp_v = (`substring $test_v 1 (size($test_v) - 4)`);
                        $theIFM= `getAttr ($temp_v+"value")`;
                }
            }
        } 
                         
                        }
            }
           
     }
     
     
      if(stringArrayCount("vraySettings.imageFormatStr", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==1)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$theIFM=`optionMenuGrp -q -v vrayImageFormatMenu`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 $name_renderlayer`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         if(stringArrayCount("vraySettings.imageFormatStr",$temp_c)==1)
                             {
                               string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                               $theIFM=`getAttr ($temp_c2+"value")`;
                           
                             }
                        }
            }
    
     }

     
     
     
     
     
     
     
     
     }
     return $theIFM;
     }////     
//注：查询 render elements
     

global proc string[] getVREE(string $layer_name)
{


string $all_v_RE[]=`vrayRenderElementsExisting`;
string $final_v_re[];
string $temp_v;
int $temp_v_if;
for ($REEx in  $all_v_RE){
string $all_plug_V[]=`listConnections -p 1 $REEx`;
for ($plug_v in $all_plug_V){
if(`match ($layer_name+"\.adjustments\[[0-9]*\].plug") $plug_v`!="")
                                {
   $temp_v = (`substring $plug_v 1 (size($plug_v) - 4)`);
    $temp_v_if= `getAttr ($temp_v+"value")`;
    if (`editRenderLayerGlobals -q -currentRenderLayer`!=$layer_name)
                                            {
                                                if($temp_v_if==1){
                                                                 $final_v_re[size($final_v_re)]=$REEx;
                                                                  }
                                     
                                        }
         if (`editRenderLayerGlobals -q -currentRenderLayer`==$layer_name)
                                            {
                                                if(`getAttr ($REEx+".enabled")`){
                                                                 $final_v_re[size($final_v_re)]=$REEx;
                                                                  }
                                     
                                        }                                   
                                }

                            }


                         }


string $the_two_n[];
string $the_two_n2[];
string $final_n_re;
for ($tmp1_vre in $final_v_re){
string $tmp2_vre=`substring $tmp1_vre 8 (size($tmp1_vre))`;
$the_two_n=stringToStringArray($tmp2_vre,"_");$the_two_n[0]=tolower($the_two_n[0]);$final_n_re=$the_two_n[0]+$the_two_n[1];
$the_two_n2[size($the_two_n2)]=$final_n_re;
}
return $the_two_n2;

}


     //
     ///////注:查询vr的exr位深
     

global proc string getexr_bit(string $name_renderlayer){
  string $temp_v;
  string $theIFM;
  if(`getURofRL($name_renderlayer)`=="vray")
  {
      
     
      
if(stringArrayCount("vraySettings.imgOpt_exr_bitsPerChannel", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==0)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$theIFM=`getAttr vraySettings.imgOpt_exr_bitsPerChannel`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 "defaultRenderLayer"`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         float $temp_if_4=0;
                         if(stringArrayCount("vraySettings.imgOpt_exr_bitsPerChannel",$temp_c)==1)
                             {
                               $temp_if_4=1;
                               string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                               $theIFM=`getAttr ($temp_c2+"value")`;
                               
                             }
                         if($temp_if_4==0){string $get_final_p[]=`listConnections -p 1  vraySettings.imgOpt_exr_bitsPerChannel`;
                         if(size($get_final_p)==0){$theIFM=`getAttr vraySettings.imgOpt_exr_bitsPerChannel`;}
                        for ($test_v in $get_final_p){
                if(`match ($name_renderlayer+"\.adjustments\[[0-9]*\].plug") $test_v`!="")
                                {
                   $temp_v = (`substring $test_v 1 (size($test_v) - 4)`);
                        $theIFM= `getAttr ($temp_v+"value")`;
                }
            }
        } 
                         
                        }
            }
           
     }
     
     
      if(stringArrayCount("vraySettings.imgOpt_exr_bitsPerChannel", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==1)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$theIFM=`getAttr vraySettings.imgOpt_exr_bitsPerChannel`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 $name_renderlayer`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         if(stringArrayCount("vraySettings.imgOpt_exr_bitsPerChannel",$temp_c)==1)
                             {
                               string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                               $theIFM=`getAttr ($temp_c2+"value")`;
                           
                             }
                        }
            }
    
     }

     
     
     
     
     
     
     
     
     }
     return $theIFM;
     }
     //////////////////////
global proc string getIFMofRL(string $name_renderlayer)
{
    string $temp_v;
    string $final_IMF; 
    string $theIFM;
    if(`getURofRL($name_renderlayer)`=="vray")
    {
       $theIFM = `getIM_v($name_renderlayer)`;
   
    }
    if(`getURofRL($name_renderlayer)`=="mayaSoftware"||`getURofRL($name_renderlayer)`=="mentalRay"){
    if(stringArrayCount("defaultRenderGlobals.imageFormat", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==0)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$theIFM=`getAttr defaultRenderGlobals.imageFormat`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 "defaultRenderLayer"`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         float $temp_if_4=0;
                         if(stringArrayCount("defaultRenderGlobals.imageFormat",$temp_c)==1)
                             {
                               $temp_if_4=1;
                               string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                               $theIFM=`getAttr ($temp_c2+"value")`;
                               
                             }
                         if($temp_if_4==0){$theIFM=`getAttr "defaultRenderGlobals.imageFormat"`;} 
                         
                        }
            }
           
     }
     
     if(stringArrayCount("defaultRenderGlobals.imageFormat", `editRenderLayerAdjustment -q -layer $name_renderlayer`)==1)
    {if(`editRenderLayerGlobals -q -currentRenderLayer`==$name_renderlayer){$theIFM=`getAttr defaultRenderGlobals.imageFormat`;}
    if(`editRenderLayerGlobals -q -currentRenderLayer`!=$name_renderlayer)
            {string $all_c[]=`listConnections -c 1 $name_renderlayer`; 
            for ($one_c in $all_c)
                        {
                         string $temp_c[]=`listConnections -p 1 $one_c`;
                         if(stringArrayCount("defaultRenderGlobals.imageFormat",$temp_c)==1)
                             {
                               string $temp_c2=`substring $one_c 1 (size($one_c) - 4)`;
                               $theIFM=`getAttr ($temp_c2+"value")`;
                           
                             }
                        }
            }
    
     }

     //////////
    
 //////////////////   
     if($theIFM=="19"){$final_IMF="Targa(tga)";}
     if(`getURofRL($name_renderlayer)`=="mentalRay")
         {
         if($theIFM=="51"&&`getAttr "miDefaultFramebuffer.datatype"`=="16"){$final_IMF= "exr(16bit)";}
         if($theIFM=="51"&&`getAttr "miDefaultFramebuffer.datatype"`=="5"){$final_IMF= "exr(32bit)";}
         if($theIFM=="51"&&`getAttr "miDefaultFramebuffer.datatype"`!="5"&&`getAttr "miDefaultFramebuffer.datatype"`!="16"){$final_IMF= "exr(16bit)";}
         }  
     
     if($theIFM=="32"){$final_IMF= "PNG(png)";}
     if($theIFM=="7"){$final_IMF= "maya(iff)";}
     if($theIFM=="3"){$final_IMF= "TIFF(tif)";}
     if($theIFM!="3"&&$theIFM!="51"
     &&$theIFM!="32"
     &&$theIFM!="19"
     &&$theIFM!="7"){$final_IMF= "Unsupport!!";}
   }
   if(`getURofRL($name_renderlayer)`=="arnold")
   {
   $theIFM=`getAttr defaultArnoldDriver.aiTranslator`;
   if($theIFM=="tif"){$final_IMF= "TIFF(tif)";}
   if($theIFM=="deepexr"){$final_IMF= "deepexr";}
   if($theIFM=="png"){$final_IMF= "PNG(png)";}
   if($theIFM=="exr"&&`getAttr "defaultArnoldDriver.halfPrecision"`=="1"){$final_IMF= "exr(16bit)";}
   if($theIFM=="exr"&&`getAttr "defaultArnoldDriver.halfPrecision"`=="0"){$final_IMF= "exr(32bit)";}
   if($theIFM!="exr"
   &&$theIFM!="tif"
   &&$theIFM!="deepexr"
   &&$theIFM!="png"){$final_IMF= "Unsupport!!";}
   
   
   }
    
    
    
     if(`getURofRL($name_renderlayer)`=="vray")
  {
     
     if($theIFM=="tga"){$final_IMF= "Targa(tga)";}
     if($theIFM=="exr"&&`getexr_bit($name_renderlayer)`=="16"){$final_IMF= "exr(16bit)";}
      if($theIFM=="exr"&&`getexr_bit($name_renderlayer)`=="32"){$final_IMF= "exr(32bit)";}
     if($theIFM=="exr (multichannel)"&&`getexr_bit($name_renderlayer)`=="16"){$final_IMF= "exr(16bit)";}
       if($theIFM=="exr (multichannel)"&&`getexr_bit($name_renderlayer)`=="32"){$final_IMF= "exr(32bit)";}
     if($theIFM=="tif"){$final_IMF= "TIFF(tif)";}
     if($theIFM=="png"){$final_IMF= "PNG(png)";}
     if($theIFM!="exr"
   &&$theIFM!="tif"
   &&$theIFM!="exr (multichannel)"
   &&$theIFM!="tga"
   &&$theIFM!="png"){$final_IMF= "Unsupport!!"; }
  }
  
  
  
  
  
  
   if(`getURofRL($name_renderlayer)`!="arnold"&&`getURofRL($name_renderlayer)`!="mayaSoftware"&&`getURofRL($name_renderlayer)`!="mentalRay"&&`getURofRL($name_renderlayer)`!="vray")
   {$final_IMF= "Unsupport!!";}

    return $final_IMF;
}

global proc get3menu(string $allRenderLayer[])
{
   
    for ($eo in $allRenderLayer)
    {
         string $t3=`getIM_v($eo)`;
         int $t4=0;
       optionMenuGrp -e -v `getURofRL($eo)` ("witch_render_"+$eo);
        optionMenuGrp -e -v `loadTheCurrentCamera` ("witch_the_camera_"+$eo);
        optionMenuGrp -e -v `getIFMofRL($eo)` ("witch_the_format_"+$eo);
        checkBox  -e -v 0  cb_m_RES;
        if($t3=="exr (multichannel)"){$t4=1;}
        if($t4==1){checkBox  -e -v 1  cb_m_RES;}
       changeTheFormatMenu($eo);
    }
    
    
}
//注：日志中止
global proc stop_log(){
      string $log_file=`getAttr ("time1.log_name")`;






string $time_c = `system "time"`;

string $time_c_r=`match "[0-9]*:[0-9]*:[0-9]*" $time_c`;

python("f=open('"+$log_file+"','r')");
python ("temp_str=f.read()");
python("f.close()");





python("f=open('"+$log_file+"','w')");
python("f.write(temp_str+'\\r\\n')");
python("f.write('=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\\r\\n')");
python("f.write('                                          该层于    "+$time_c_r+"'+'    被中止   '+'\\r\\n\\r\\n\\r\\n')");
python("f.close()");
 setAttr "time1.layer_time" 0; 
    
    
}


//注：关于进程
global proc openImagesFolder_layer(string $Rlayer){
    string $loc=`textField -q -tx path_loc`;
    string $path=`toNativePath $loc`;
     string $the_scene_name=`getTheSceneName`;
     string $temp_pt=`fromNativePath(($path+$the_scene_name+"\\"+$Rlayer))`;
     if(`filetest -d $temp_pt`){
    system ("start explorer \""+$path+$the_scene_name+"\\"+$Rlayer+"\"");}
    else{print "目录不存在！\n";}
     
}

global proc procToZ(string $allRenderLayer[]){
int $if_interrupt=0;
int $temp_CD=1-(`getAttr "defaultRenderLayer.renderable"`);
setAttr "defaultRenderLayer.renderable" ($temp_CD) ;
setAttr "defaultRenderLayer.renderable" (1-$temp_CD) ;
string $allRenderLayer[]=`ls    -type "renderLayer"`;
string $temp_rf_rl[]=`ls  -rn -type "renderLayer"`;
$allRenderLayer=`stringArrayRemove $temp_rf_rl $allRenderLayer`;
if(size($allRenderLayer)==1){
duplicate -inputConnections defaultRenderLayer;renderLayerEditorItemOnRename "defaultRenderLayer1" "UFR_Renderlayer";}setAttr "defaultRenderLayer.renderable" 0;


$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
  
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
python "import os.path"; 
 
int $temp_hwin=$num_Layer*35;
int $height_rlWin=`clamp 120 230 $temp_hwin`;

string $defaultLocation_temp= `workspace -en images`;
string $defaultLocation= toNativePath($defaultLocation_temp);
int $theResolution_w=`getAttr "defaultResolution.w"`;
int $theResolution_h=`getAttr "defaultResolution.h"`;
string $getTheW;
string $getTheH;
for ($oipo in $allRenderLayer)
{
    progressBar -e -bp ("proBar_render_"+$oipo);
    
}
deleteUI main_pro;

rowColumnLayout -p main_layout -numberOfColumns 1 -vis 0 -en 0 -h 1 main_pro;
string $scrollLayout = `scrollLayout -w 835  -h ($height_rlWin-20)
        -horizontalScrollBarThickness 16
        -verticalScrollBarThickness   16`;
   rowColumnLayout -numberOfColumns 1  ;      
     
      rowColumnLayout -numberOfColumns 5 -cw 1 150 -cw 2 20 -cw 3 500 -cw 4 40 -cw 5 70 ;  
      for ($pr=$num_Layer-1;$pr>-1;$pr--){
       text -fn "boldLabelFont" -l $allRenderLayer[$pr];
       $the_start_frame=`intField -q -v ("startFrame_"+$allRenderLayer[$pr])`;
       text -fn "boldLabelFont" -l $the_start_frame ("sf_proc_"+$allRenderLayer[$pr]);
       rowColumnLayout -numberOfColumns 2  ;
       progressBar -pr 0 -imp 1 -ii 1 -maxValue 100 -width 500 ("proBar_render_"+$allRenderLayer[$pr]);
       
       text -fn "boldLabelFont" -l "  " ;
       
       setParent ..; 
       $the_end_frame=`intField -q -v ("endFrame_"+$allRenderLayer[$pr])`;
        text -fn "boldLabelFont" -l $the_end_frame ("ef_proc_"+$allRenderLayer[$pr]);
      
      // text -fn "boldLabelFont" -l "队列中…" ("pro_zt"+$allRenderLayer[$pr]);
       button -l "Open path" -c ("openImagesFolder_layer(\""+$allRenderLayer[$pr]+"\")") ("pro_dkml"+$allRenderLayer[$pr]);
       
  }
       setParent ..;   
       
         setParent ..;  
         text  -vis 0 -l "zhongzhi" stop;
         
         
          setParent main_pro;  

if_vis_pro($num_Layer);

}
global proc changeProc(string $allRenderLayer[]){
   
   string $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;
    int $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
    int $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
   int $cframe=`currentTime -q`;
   
    float $bfb=($cframe-$the_start_frame+1)*100/($the_end_frame-$the_start_frame+1);
   
 //progressBar -e -bp -w 500 ("proBar_render_"+$CRENDERLAYER);

   progressBar -e -pr $bfb ("proBar_render_"+$CRENDERLAYER);
   int $temp_cmt=0;
   for ($tttt in $allRenderLayer){ // progressBar -e -bp -w 500 ("proBar_render_"+$tttt);
 if(`progressBar -q -ic ("proBar_render_"+$tttt)`==1){
 $temp_cmt=1;}
}
   
   if($temp_cmt==1){catch(`deleteUI stop`);
$if_interrupt=1;clearAll;warning "\n渲染被中止！\n" ;

//if(`text -q -ex stop`!=1){stop_log;}
openlog;}
  
 


}
/////////////////////

//注：跳转脚本

global proc int getIndex2(string $getsize[],string $com){
int $the_index;
for($i =0; $i<size($getsize); $i++) 
{
if($getsize[$i] == $com)  
{$the_index= $i;}  
}
return $the_index;
}


global proc clearAll(){ 
        
         
editRenderLayerAdjustment -remove "defaultRenderGlobals.postRenderMel";
setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postMel" -type "string" "";
setAttr  "defaultRenderGlobals.preMel" -type "string" "";

int $if_interrupt=0;
int $temp_CD=1-(`getAttr "defaultRenderLayer.renderable"`);
setAttr "defaultRenderLayer.renderable" ($temp_CD) ;
setAttr "defaultRenderLayer.renderable" (1-$temp_CD) ;
string $allRenderLayer[]=`ls    -type "renderLayer"`;
string $temp_rf_rl[]=`ls  -rn -type "renderLayer"`;
$allRenderLayer=`stringArrayRemove $temp_rf_rl $allRenderLayer`;
if(size($allRenderLayer)==1){
duplicate -inputConnections defaultRenderLayer;renderLayerEditorItemOnRename "defaultRenderLayer1" "UFR_Renderlayer";}setAttr "defaultRenderLayer.renderable" 0;


$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
  
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
python "import os.path"; 
 
int $temp_hwin=$num_Layer*35;
int $height_rlWin=`clamp 120 230 $temp_hwin`;

string $defaultLocation_temp= `workspace -en images`;
string $defaultLocation= toNativePath($defaultLocation_temp);
int $theResolution_w=`getAttr "defaultResolution.w"`;
int $theResolution_h=`getAttr "defaultResolution.h"`;
string $getTheW;
string $getTheH;

 string $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;
    int $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
    int $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
   int $cframe=`currentTime -q`;
   
    float $bfb=($cframe-$the_start_frame)*100/($the_end_frame-$the_start_frame+1);

int $soso=getIndex2($allRenderLayer,$CRENDERLAYER);
if($cframe>$the_end_frame){

for ($oipo in $allRenderLayer)
{
    progressBar -e -ep ("proBar_render_"+$oipo);
    
}

for ($oicq=$num_Layer-1;$oicq>$soso;$oicq--)
{
    progressBar -e -pr 100 ("proBar_render_"+$allRenderLayer[$oicq]);
}

progressBar -e -pr $bfb ("proBar_render_"+$allRenderLayer[$soso]);

rowColumnLayout -e -en  1 main_layout; 
}
 }



global proc scriptOne(int $if_interrupt){
   //计算时间
   string $time_c1=`getAttr ("time1.start_time")`;
   string $log_file=`getAttr ("time1.log_name")`;
   string $time_c_r1=`match "[0-9]*:[0-9]*:[0-9]*" $time_c1`;
int $cframe=`currentTime -q`;
string $time_c_F[]=`stringToStringArray $time_c_r1 ":"` ;
string $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;
int $time_c_f_h=$time_c_F[0];
int $time_c_f_m=$time_c_F[1];
int $time_c_f_s=$time_c_F[2];
string $time_c2 = `system "time"`;
string $time_c_r2=`match "[0-9]*:[0-9]*:[0-9]*" $time_c2`;

string $time_c_B[]=`stringToStringArray $time_c_r2 ":"` ;

int $time_c_b_h=$time_c_B[0];
int $time_c_b_m=$time_c_B[1];
int $time_c_b_s=$time_c_B[2];

int $all_sec=($time_c_b_h-$time_c_f_h)*3600 + ($time_c_b_m-$time_c_f_m)*60 + ($time_c_b_s-$time_c_f_s) ;



int $all_time[]={$all_sec/3600,($all_sec-($all_sec/3600)*3600)/60,$all_sec%60};


string $total_time=($all_time[0]+" 小时 "+$all_time[1]+" 分钟 "+$all_time[2]+" 秒 ");
string $total_sec=($all_sec+" 秒");


setAttr "time1.layer_time" (`getAttr "time1.layer_time"`+$all_sec);



string $frame_info=("RenderLayer :"+$CRENDERLAYER+" → "+"Frame "+$cframe+ " 开始于 " +$time_c_r1+" 结束于 " +$time_c_r2 +" 共耗时 "+$total_time+"("+$total_sec+")");
//读取log信息并写入





python("f=open('"+$log_file+"','r')");
python ("temp_str=f.read()");
python("f.close()");


python("f=open('"+$log_file+"','w')");
python("f.write(temp_str)");
python("f.write('"+$frame_info+"'+'\\r\\n')");
python("f.close()");


   
   
   
    $if_interrupt=0;
 ////////////准备   
string $allRenderLayer[]=`ls  -type "renderLayer"`;

$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
      int $index_RL=1;
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
int $allf=getAllF();
int $temp_index;

string $the_output_path=`textField -q -tx  path_loc`;
string $the_output_path_L=`fromNativePath($the_output_path)`;
 string $the_scene_name=`getTheSceneName`;
  string $new_path=($the_output_path_L+$the_scene_name+"/"+$CRENDERLAYER);
int $the_padding=`optionMenuGrp -q -v the_padding`;
int $ifmaov=`checkBox -q -v cb_m_aovs`;
int $ifmpass=`checkBox -q -v cb_m_passes`;
int $ifmRES=`checkBox -q -v cb_m_RES`;
string $the_passArr[]=`getPASSarr($CRENDERLAYER)`;

if(`getAttr ($CRENDERLAYER+".renderable")`==1&&$if_interrupt==0)
{
  //setAttr time1.index_frame (`getAttr time1.index_frame`+1);
//1

 sysFile -makeDir $new_path;
              //  editRenderLayerGlobals -crl $allRenderLayer[$num_Layer-1];
                
                editRenderLayerAdjustment "defaultRenderGlobals.currentRenderer";
                editRenderLayerAdjustment "defaultRenderGlobals.imageFilePrefix";
                
                 

string $the_image_format=`optionMenuGrp -q -v ("witch_the_format_"+$CRENDERLAYER)`;
string $the_real_image_format;
string  $the_using_render=`optionMenuGrp -q -v ("witch_render_"+$CRENDERLAYER)`;


int $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
int $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;

string $the_output_path_L=`fromNativePath($the_output_path)`;
string $the_AOVs[]=`getAOVarr`;
string $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
string $temp_num=FileNum($the_padding,$cframe);

string $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$CRENDERLAYER)`;
  
changeProc($allRenderLayer);




////////////复制

if($the_using_render=="arnold"){
if(size($the_AOVs)!=0||`getAOVarr2`==1){

                //  currentTime $the_start_frame;
                  
                  $cframe=`currentTime -q`;
                        string $temp_num;
                        string $the_num_name;
                    string $new_path=($the_output_path_L+$the_scene_name+"/"+$CRENDERLAYER);
                                 
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            //setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                            
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                           //setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        ///查格式
                          if($the_image_format=="exr(32bit)")
                   {   $the_real_image_format="exr";
            
                   
                       
                        
                   }
                    if($the_image_format=="exr(16bit)")
                   {
                       $the_real_image_format="exr";
                       
                        //$the_compression=`optionMenuGrp -q -v ("witch_the_compression_"+$CRENDERLAYER)`;
                        
                      
                       
                           
                       
                    
                     
                   }
                    if($the_image_format=="deepexr")
                   {
                       $the_real_image_format="deepexr";
                       
                       
                   }
                    if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                       
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       
                       
                   }
                        ///
           
                        if($ifmaov==0){
                            
                            
                            
                            
                            $the_AOVs=`getAOVarr`;  
                            $the_AOVs[size($the_AOVs)]="beauty";
                              
                            for ($the_aovs in $the_AOVs)
                                    {
                           
                           
                          global string $renameFileFullPath_p;
                            global string $newPathStr_p;
                            string $old_temp_path;

                            string $defaultLocation_temp2= (`workspace -en images`+"/");
                           
                            $old_temp_path=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$the_aovs+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                       
                                 


                            

                            $renameFileFullPath_p=$old_temp_path;
                            if(`getAOVarr2`==0){
                            $newPathStr_p = ($new_path+"/"+$file_name_prefix+"_"+$the_aovs+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);}
                             if(`getAOVarr2`==1){
                            $newPathStr_p = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);}                         

                          

                            python ("renameFileFullPath_p = mel.eval('$null_FY3=$renameFileFullPath_p')");
                            python ("newPathStr_p = mel.eval('$null_FY4=$newPathStr_p')");

                            python ("cmds.sysFile (renameFileFullPath_p,move=newPathStr_p)");
                  
                                    }}
                                    
                        if($ifmaov==1){
                       
                     
                     
                            global string $renameFileFullPath_p10;
                            global string $newPathStr_p10;
                            string $old_temp_path10;
                           
                            //$the_AOVs=`getAOVarr`;  
                           // $the_AOVs[size($the_AOVs)]="beauty";
                              
                            string $defaultLocation_temp2= (`workspace -en images`+"/");
                            $old_temp_path10=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                            $renameFileFullPath_p10=$old_temp_path10;
                            $newPathStr_p10 = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                           


                            python ("renameFileFullPath_p10 = mel.eval('$null_FY10=$renameFileFullPath_p10')");
                            python ("newPathStr_p10 = mel.eval('$null_FY10=$newPathStr_p10')");

                            python ("cmds.sysFile (renameFileFullPath_p10,move=newPathStr_p10)");

                           
                              }
}//if(size($the_AOVs)!=0||`getAOVarr2`==1)

                            if(size($the_AOVs)==0&&`getAOVarr2`==0)
                            {
                              $cframe=`currentTime -q`;
                        string $temp_num;
                        string $the_num_name;
                    string $new_path=($the_output_path_L+$the_scene_name+"/"+$CRENDERLAYER);
                                 
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            //setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                            
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                           //setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        ///查格式
                          if($the_image_format=="exr(32bit)")
                   {   $the_real_image_format="exr";
            
                   
                       
                        
                   }
                    if($the_image_format=="exr(16bit)")
                   {
                       $the_real_image_format="exr";
                       
                        //$the_compression=`optionMenuGrp -q -v ("witch_the_compression_"+$CRENDERLAYER)`;
                        
                      
                       
                           
                       
    
                     
                   }
                    if($the_image_format=="deepexr")
                   {
                       $the_real_image_format="deepexr";
                       
                       
                   }
                    if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                       
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       
                       
                   }  
                            global string $renameFileFullPath_p10;
                            global string $newPathStr_p10;
                            string $old_temp_path10;
                           
                            //$the_AOVs=`getAOVarr`;  
                           // $the_AOVs[size($the_AOVs)]="beauty";
                              
                             string $defaultLocation_temp2= (`workspace -en images`+"/");
                            $old_temp_path10=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                            $renameFileFullPath_p10=$old_temp_path10;
                            $newPathStr_p10 = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                           


                            python ("renameFileFullPath_p10 = mel.eval('$null_FY10=$renameFileFullPath_p10')");
                            python ("newPathStr_p10 = mel.eval('$null_FY10=$newPathStr_p10')");

                            python ("cmds.sysFile (renameFileFullPath_p10,move=newPathStr_p10)");
                            }//if(size($the_AOVs)==0&&`getAOVarr2`==0)
                            
                            
}//arnold       
                           
                      if($the_using_render=="mentalRay") {
      //查格式
           if($the_image_format=="exr(32bit)")
                   {   
                   $the_real_image_format="exr"; 
                      
                       
                   }    
                    if($the_image_format=="exr(16bit)")
                   {
                       $the_real_image_format="exr";
                       
                  }
                    if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                     
                       
                   }
                         if($the_image_format=="Targe(tga)")
                   {
                       $the_real_image_format="tga";
                      
                       
                   }
                         if($the_image_format=="maya(iff)")
                   {
                       $the_real_image_format="iff";
                      
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       
                       
                   }
     if(size($the_passArr)!=0){
          $cframe=`currentTime -q`;
                        string $temp_num;
                        string $the_num_name;
         string $new_path=($the_output_path_L+$the_scene_name+"/"+$CRENDERLAYER);
         
         if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            if($ifmpass==0){
                            $the_num_name=($file_name_prefix+"_<RenderPass>_"+$temp_num);}
                            if($ifmpass==1){
                            $the_num_name=($file_name_prefix+"_"+$temp_num);}
                           
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            if($ifmpass==0){
                            $the_num_name=($file_name_prefix+"_<RenderPass>_"+$temp_num);}
                            if($ifmpass==1){
                            $the_num_name=($file_name_prefix+"_"+$temp_num);}
                            
                        }
        
                   
                   //开始复制
                    if($ifmpass==0){
                        global string $renameFileFullPath_p_3;
                            global string $newPathStr_p_3;
                            string $old_temp_path_3;
                           
                            
                            $the_passArr=`getPASSarr($CRENDERLAYER)`;
                              
                            $the_passArr[size($the_passArr)]="MasterBeauty";
                              
                            for ($the_pass_in in $the_passArr)
                                    {
                           
                           string $defaultLocation_temp2= (`workspace -en images`+"/");
                            $old_temp_path_3=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_pass_in+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                       


                       

                            $renameFileFullPath_p_3=$old_temp_path_3;
                          
                            $newPathStr_p_3 = ($new_path+"/"+$file_name_prefix+"_"+$the_pass_in+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             

                 

                            python ("renameFileFullPath_p_3 = mel.eval('$null_FY5=$renameFileFullPath_p_3')");
                            python ("newPathStr_p_3 = mel.eval('$null_FY6=$newPathStr_p_3')");

                            python ("cmds.sysFile (renameFileFullPath_p_3,move=newPathStr_p_3)");

                        
                        
                        }
                        }     
                        if($ifmpass==1)
                         {global string $renameFileFullPath_p_11;
                            global string $newPathStr_p_11;
                            string $old_temp_path_11;
                           
                             string $defaultLocation_temp2= (`workspace -en images`+"/");
                          
                            $old_temp_path_11=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                       


                       

                            $renameFileFullPath_p_11=$old_temp_path_11;
                          
                            $newPathStr_p_11 = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             

                 

                            python ("renameFileFullPath_p_11 = mel.eval('$null_FY7=$renameFileFullPath_p_11')");
                            python ("newPathStr_p_11 = mel.eval('$null_FY8=$newPathStr_p_11')");

                            python ("cmds.sysFile (renameFileFullPath_p_11,move=newPathStr_p_11)");}
                   
     }//if(size($the_passArr)!=0)
           if(size($the_passArr)==0){
           $cframe=`currentTime -q`;
                        string $temp_num;
                        string $the_num_name;
         string $new_path=($the_output_path_L+$the_scene_name+"/"+$CRENDERLAYER);
            if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            
                           
                            $the_num_name=($file_name_prefix+"_"+$temp_num);
                           
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                           
                           
                            $the_num_name=($file_name_prefix+"_"+$temp_num);
                            
                        }
                        global string $renameFileFullPath_p_11;
                            global string $newPathStr_p_11;
                            string $old_temp_path_11;
                           
                            string $defaultLocation_temp2= (`workspace -en images`+"/");
                          
                            $old_temp_path_11=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                       


                       

                            $renameFileFullPath_p_11=$old_temp_path_11;
                          
                            $newPathStr_p_11 = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             

                 

                            python ("renameFileFullPath_p_11 = mel.eval('$null_FY7=$renameFileFullPath_p_11')");
                            python ("newPathStr_p_11 = mel.eval('$null_FY8=$newPathStr_p_11')");

                            python ("cmds.sysFile (renameFileFullPath_p_11,move=newPathStr_p_11)");
                        
      }//if(size($the_passArr)==0)
     
 }//mentalray                           
 if($the_using_render=="mayaSoftware") 
{
if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                      
                       
                   }
                         if($the_image_format=="Targe(tga)")
                   {
                       $the_real_image_format="tga";
                     
                       
                   }
                         if($the_image_format=="maya(iff)")
                   {
                       $the_real_image_format="iff";
                      
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       
                       
                   }
    string $new_path=($the_output_path_L+$the_scene_name+"/"+$CRENDERLAYER);
            $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
                         $cframe=`currentTime -q`;
                        string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
                        global string $renameFileFullPath_p_4;
                            global string $newPathStr_p_4;
                            string $old_temp_path_4;
                           
                            string $defaultLocation_temp2= (`workspace -en images`+"/");
                          
                            $old_temp_path_4=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                       


                       

                            $renameFileFullPath_p_4=$old_temp_path_4;
                          
                            $newPathStr_p_4 = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             
                       
                            python ("renameFileFullPath_p_4 = mel.eval('$null_FY7=$renameFileFullPath_p_4')");
                            python ("newPathStr_p_4 = mel.eval('$null_FY8=$newPathStr_p_4')");

                            python ("cmds.sysFile (renameFileFullPath_p_4,move=newPathStr_p_4)");
                            
                            

    
}//mayaSoftware

if($the_using_render=="vray") {
      //查格式
      string $defaultLocation_temp2= (`workspace -en images`+"/");
      string $the_RESArr[]=`getVREE($CRENDERLAYER)`;
           if($the_image_format=="exr(32bit)")
                   {   
                   $the_real_image_format="exr"; 
                      
                       
                   }    
                    if($the_image_format=="exr(16bit)")
                   {
                       $the_real_image_format="exr";
                       
                  }
                    if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                     
                       
                   }
                         if($the_image_format=="Targe(tga)")
                   {
                       $the_real_image_format="tga";
                      
                       
                   }
                         if($the_image_format=="maya(iff)")
                   {
                       $the_real_image_format="iff";
                      
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       
                       
                   }
     if(size($the_RESArr)!=0){
          $cframe=`currentTime -q`;
                        string $temp_num;
                        string $the_num_name;
         string $new_path=($the_output_path_L+$the_scene_name+"/"+$CRENDERLAYER);
         
         if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                           
                            
                            $the_num_name=($file_name_prefix+"_"+$temp_num);
                           
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                   
                            $the_num_name=($file_name_prefix+"_"+$temp_num);
                            
                        }
        
                   
                   //开始复制
                    if($ifmRES==0){
                        global string $renameFileFullPath_p_3;
                            global string $newPathStr_p_3;
                            string $old_temp_path_3;
                           
                          
                            $the_RESArr=`getVREE($CRENDERLAYER)`;
                              
                            $the_RESArr[size($the_RESArr)]="MasterBeauty";
                              
                              
                             
                              
                            for ($the_pass_in in $the_RESArr)
                                    {
                           if($the_pass_in!="MasterBeauty"){
                            $old_temp_path_3=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"_"+$the_pass_in+"."+$the_real_image_format);}
                         if($the_pass_in=="MasterBeauty"){
                            $old_temp_path_3=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);}


                       

                            $renameFileFullPath_p_3=$old_temp_path_3;
                            
                            $newPathStr_p_3 = ($new_path+"/"+$file_name_prefix+"_"+$the_pass_in+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             

                 

                            python ("renameFileFullPath_p_3 = mel.eval('$null_FY5=$renameFileFullPath_p_3')");
                            python ("newPathStr_p_3 = mel.eval('$null_FY6=$newPathStr_p_3')");

                            python ("cmds.sysFile (renameFileFullPath_p_3,move=newPathStr_p_3)");}
/////////////////////////////
                           
                        
                        
                         for ($the_pass_in in $the_RESArr)
                                    {
                           if($the_pass_in!="MasterBeauty"){
                            $old_temp_path_3=($defaultLocation_temp2+"tmp/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"_"+$the_pass_in+"."+$the_real_image_format);}
                         if($the_pass_in=="MasterBeauty"){
                            $old_temp_path_3=($defaultLocation_temp2+"tmp/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);}


                       

                            $renameFileFullPath_p_3=$old_temp_path_3;
                            
                            $newPathStr_p_3 = ($new_path+"/"+$file_name_prefix+"_"+$the_pass_in+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             

                 

                            python ("renameFileFullPath_p_3 = mel.eval('$null_FY5=$renameFileFullPath_p_3')");
                            python ("newPathStr_p_3 = mel.eval('$null_FY6=$newPathStr_p_3')");

                            python ("cmds.sysFile (renameFileFullPath_p_3,move=newPathStr_p_3)");
/////////////////////////////
                           
                        
                        
                        }
                        
                        
                        
                        }     
                        if($ifmRES==1)
                         {global string $renameFileFullPath_p_11;
                            global string $newPathStr_p_11;
                            string $old_temp_path_11;
                           
                            
                          
                            $old_temp_path_11=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                       

                                                       
                       

                            $renameFileFullPath_p_11=$old_temp_path_11;
                          
                            $newPathStr_p_11 = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             
                            
                 

                            python ("renameFileFullPath_p_11 = mel.eval('$null_FY7=$renameFileFullPath_p_11')");
                            python ("newPathStr_p_11 = mel.eval('$null_FY8=$newPathStr_p_11')");

                            python ("cmds.sysFile (renameFileFullPath_p_11,move=newPathStr_p_11)");
                            
                            //////
                            
                          
                            $old_temp_path_11=($defaultLocation_temp2+"tmp/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                       

                                                       
                       

                            $renameFileFullPath_p_11=$old_temp_path_11;
                          
                            $newPathStr_p_11 = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             
                            
                 

                            python ("renameFileFullPath_p_11 = mel.eval('$null_FY7=$renameFileFullPath_p_11')");
                            python ("newPathStr_p_11 = mel.eval('$null_FY8=$newPathStr_p_11')");

                            python ("cmds.sysFile (renameFileFullPath_p_11,move=newPathStr_p_11)");                            
                            
                            }
                   
     }//if(size($the_passArr)!=0)
           if(size($the_RESArr)==0){
           $cframe=`currentTime -q`;
                        string $temp_num;
                        string $the_num_name;
         string $new_path=($the_output_path_L+$the_scene_name+"/"+$CRENDERLAYER);
            if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            
                           
                            $the_num_name=($file_name_prefix+"_"+$temp_num);
                           
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                           
                           
                            $the_num_name=($file_name_prefix+"_"+$temp_num);
                            
                        }
                        global string $renameFileFullPath_p_11;
                            global string $newPathStr_p_11;
                            string $old_temp_path_11;
                           
                            
                          
                            $old_temp_path_11=($defaultLocation_temp2+"tmp/"+$CRENDERLAYER+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                       


                       

                            $renameFileFullPath_p_11=$old_temp_path_11;
                          
                            $newPathStr_p_11 = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             

                 

                            python ("renameFileFullPath_p_11 = mel.eval('$null_FY7=$renameFileFullPath_p_11')");
                            python ("newPathStr_p_11 = mel.eval('$null_FY8=$newPathStr_p_11')");

                            python ("cmds.sysFile (renameFileFullPath_p_11,move=newPathStr_p_11)");
                            ////////
                            
                            $old_temp_path_11=($defaultLocation_temp2+"tmp/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                       
                              

                       

                            $renameFileFullPath_p_11=$old_temp_path_11;
                           
                            $newPathStr_p_11 = ($new_path+"/"+$file_name_prefix+"_"+$the_camera+"."+$temp_num+"."+$the_real_image_format);
                             
                                      
                 

                            python ("renameFileFullPath_p_11 = mel.eval('$null_FY7=$renameFileFullPath_p_11')");
                            python ("newPathStr_p_11 = mel.eval('$null_FY8=$newPathStr_p_11')");

                            python ("cmds.sysFile (renameFileFullPath_p_11,move=newPathStr_p_11)");
                        
                        
      }//if(size($the_RESArr)==0)
     
 }//vray  


////////////////////判断打断

    if($if_interrupt==1){
             editRenderLayerAdjustment -remove "defaultRenderGlobals.postRenderMel";
setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postMel" -type "string" "";
setAttr  "defaultRenderGlobals.preMel" -type "string" "";
progressWindow -endProgress;
warning "渲染被中断！！";
}
///////////////////跳帧 写 渲
$cframe=`currentTime -q`;
catch ("text -q -vis stop");

 $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`; 
 $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
if($the_using_render=="arnold"&&$if_interrupt==0){
    if ($cframe<=$the_end_frame)
    {
      currentTime (`currentTime -q`+1) ;
        $cframe=`currentTime -q`;

    if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                                 
}
                if($cframe==$the_end_frame&&$CRENDERLAYER==$allRenderLayer[0]&&$if_interrupt==0)
         {
          
          if($if_interrupt==0){
         editRenderLayerAdjustment -remove "defaultRenderGlobals.postRenderMel";
setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "scriptOne($if_interrupt);clearAll();";
setAttr  "defaultRenderGlobals.preRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postMel" -type "string" "";
setAttr  "defaultRenderGlobals.preMel" -type "string" "";
}

         }

}//arnold
 
if($the_using_render=="mentalRay"&&$if_interrupt==0){
    if ($cframe<=$the_end_frame)
    {
       currentTime (`currentTime -q`+1) ;
        $cframe=`currentTime -q`;
   

   
if(size($the_passArr)!=0){

               
                 
           
                         $cframe=`currentTime -q`;
                      
                   
                                           
      
                                              
                      if($ifmpass==0){
                
                         // setAttr -type "string" "defaultRenderGlobals.imageFilePrefix" ($file_name_prefix+"_<RenderPass>");
                        string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            if($ifmpass==0){
                            $the_num_name=($file_name_prefix+"_<RenderPass>_"+$the_camera+"."+$temp_num);}
                            if($ifmpass==1){
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);}
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            if($ifmpass==0){
                            $the_num_name=($file_name_prefix+"_<RenderPass>_"+$the_camera+"."+$temp_num);}
                            if($ifmpass==1){
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);}
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
               
                        }     
                        if($ifmpass==1)
                         {
                             string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                     
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }   
                       
                            }
                     }

                       if(size($the_passArr)==0)  
                   {
                  $cframe=`currentTime -q`;
                     
                         string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
                        
             

                    
                     

                                    }
                           
                        

} 

               if($cframe==$the_end_frame&&$CRENDERLAYER==$allRenderLayer[0]&&$if_interrupt==0)
         {
          
          if($if_interrupt==0){
         editRenderLayerAdjustment -remove "defaultRenderGlobals.postRenderMel";
setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postMel" -type "string" "scriptOne($if_interrupt);clearAll()";
setAttr  "defaultRenderGlobals.preMel" -type "string" "";
}

         }
     
}//mentalRay
if($the_using_render=="mayaSoftware"&&$if_interrupt==0) 
{
     if ($cframe<=$the_end_frame){
         currentTime (`currentTime -q`+1) ;
        $cframe=`currentTime -q`;
         $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
                        
                        string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
         
     }
     
     
                    if($cframe==$the_end_frame&&$CRENDERLAYER==$allRenderLayer[0]&&$if_interrupt==0)
         {
          
          if($if_interrupt==0){
         editRenderLayerAdjustment -remove "defaultRenderGlobals.postRenderMel";
setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postMel" -type "string" "scriptOne($if_interrupt);clearAll()";
setAttr  "defaultRenderGlobals.preMel" -type "string" "";
}

         }
}//mayaSoftware


 
 ////////////////////////////
 
 

if($the_using_render=="vray"&&$if_interrupt==0){
    if ($cframe<=$the_end_frame)
    {
       currentTime (`currentTime -q`+1) ;
        $cframe=`currentTime -q`;
   
 $cframe=`currentTime -q`;
      $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
// setAttr -type "string" "defaultRenderGlobals.imageFilePrefix" ($file_name_prefix+"_<RenderPass>");
                        string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                           
                          
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" "vraySettings.fileNamePrefix" $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                  
                  
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" "vraySettings.fileNamePrefix" $the_num_name;
                        }
                        
        } 

               if($cframe==$the_end_frame&&$CRENDERLAYER==$allRenderLayer[0]&&$if_interrupt==0)
         {
          
          if($if_interrupt==0){
         editRenderLayerAdjustment -remove "defaultRenderGlobals.postRenderMel";
setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderMel" -type "string" "";
setAttr  "defaultRenderGlobals.preRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postRenderLayerMel" -type "string" "";
setAttr  "defaultRenderGlobals.postMel" -type "string" " scriptOne($if_interrupt);clearAll()";
setAttr  "defaultRenderGlobals.preMel" -type "string" "";
}

         }
     
}//vray

 $cframe=`currentTime -q`;
   $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;  
   int $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
   
      if($cframe<=$the_end_frame&&$if_interrupt==0){    
   string $time_c1 = `system "time"`;
   setAttr  -type "string" ("time1.start_time") $time_c1;

 
  print ("当前层 ： "+$CRENDERLAYER+"  当前帧 ： "+$cframe+"\n");

  renderWindowRenderCamera ("render","renderView",$the_camera);}

             
  if($cframe>$the_end_frame&&$CRENDERLAYER==$allRenderLayer[0]&&$if_interrupt==0)
     {
                string $log_file=`getAttr ("time1.log_name")`;


string $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;
             
             
             
   string  $the_using_render=`optionMenuGrp -q -v ("witch_render_"+$CRENDERLAYER)`;

     int $sec_layer=`getAttr "time1.layer_time"`;

int $time_layer[]={$sec_layer/3600,($sec_layer-($sec_layer/3600)*3600)/60,$sec_layer%60};
string $total_time_layer=($time_layer[0]+" 小时 "+$time_layer[1]+" 分钟 "+$time_layer[2]+" 秒 ");
string $total_sec_layer=("("+$sec_layer+" 秒)");

python("f=open('"+$log_file+"','r')");
python ("temp_str=f.read()");
python("f.close()");




python("f=open('"+$log_file+"','w')");
python("f.write(temp_str+'\\r\\n')");

python("f.write('↑ 该层渲染器：   "+$the_using_render+"'+'        渲染总时间：   "+$total_time_layer+"  "+$total_sec_layer+"'+'\\r\\n')");
python("f.write('====================================================\\r\\n\\r\\n')");
python("f.close()");
 setAttr "time1.layer_time" 0;     
 print "渲染完毕！\n";
 openlog;
 }
////////////////////跳层 ////////////////////检测 写 渲   

 
  $temp_index=getIndex2($allRenderLayer,$CRENDERLAYER); 
  
      if ($cframe>$the_end_frame&&$CRENDERLAYER!=$allRenderLayer[0]&&$if_interrupt==0){
  
          
     int $sec_layer=`getAttr "time1.layer_time"`;

int $time_layer[]={$sec_layer/3600,($sec_layer-($sec_layer/3600)*3600)/60,$sec_layer%60};
string $total_time_layer=($time_layer[0]+" 小时 "+$time_layer[1]+" 分钟 "+$time_layer[2]+" 秒 ");
string $total_sec_layer=("("+$sec_layer+" 秒)");

python("f=open('"+$log_file+"','r')");
python ("temp_str=f.read()");
python("f.close()");





python("f=open('"+$log_file+"','w')");
python("f.write(temp_str+'\\r\\n')");

python("f.write('↑ 该层渲染器：   "+$the_using_render+"'+'        渲染总时间：   "+$total_time_layer+"  "+$total_sec_layer+"'+'\\r\\n')");
python("f.write('====================================================\\r\\n\\r\\n')");
python("f.close()");
 setAttr "time1.layer_time" 0;

         
          editRenderLayerGlobals  -crl $allRenderLayer[($temp_index-1)];
          
           $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;   
                               string $del_path=($the_output_path_L+"tmp/"+$CRENDERLAYER+"/");
                      string $all_del[]= `getFileList -fld $del_path`;
                 for ($del_file in $all_del){
                 sysFile  -del ($del_path+"/"+$del_file);
                 }
         $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
         $the_image_format=`optionMenuGrp -q -v ("witch_the_format_"+$CRENDERLAYER)`;
       
       currentTime $the_start_frame;
            $cframe=`currentTime -q`;
           
           $the_using_render=`optionMenuGrp -q -v ("witch_render_"+$CRENDERLAYER)`;
           //
         if($the_using_render=="arnold") {
           setAttr -type "string" "defaultRenderGlobals.currentRenderer" "arnold";
                    if($the_image_format=="exr(32bit)")
                   {   $the_real_image_format="exr";
                  
                       editRenderLayerAdjustment "defaultArnoldDriver.exrCompression";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       setAttr "defaultArnoldDriver.halfPrecision" 0;
                        //$the_compression=`optionMenuGrp -q -v ("witch_the_compression_"+$CRENDERLAYER)`;
                       
                      
                        setAttr "defaultArnoldDriver.exrCompression" 3; 
                       
                        if(`rowColumnLayout -q -en the4box`){
                        $the_preserve_layer_name=`checkBox -q -v cb_Preserve`;
                        $the_tiled=`checkBox -q -v cb_Tiled`;
                        $the_autocrop=`checkBox -q -v cb_Autocrop`;
                        $the_append=`checkBox -q -v  cb_append`;
                        if (`objExists defaultArnoldDriver`){
                        setAttr "defaultArnoldDriver.preserveLayerName" $the_preserve_layer_name;
                        setAttr "defaultArnoldDriver.tiled" $the_tiled;
                        setAttr "defaultArnoldDriver.autocrop" $the_autocrop;
                        setAttr "defaultArnoldDriver.append" $the_append;}}
                   }
                    if($the_image_format=="exr(16bit)")
                   {
                       $the_real_image_format="exr";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       setAttr "defaultArnoldDriver.halfPrecision" 1;
                        //$the_compression=`optionMenuGrp -q -v ("witch_the_compression_"+$CRENDERLAYER)`;
                        
                      
                       
                        setAttr "defaultArnoldDriver.exrCompression" 3; 
                       
                        $the_preserve_layer_name=`checkBox -q -v cb_Preserve`;
                        $the_tiled=`checkBox -q -v cb_Tiled`;
                        $the_autocrop=`checkBox -q -v cb_Autocrop`;
                        $the_append=`checkBox -q -v  cb_append`;
                        setAttr "defaultArnoldDriver.preserveLayerName" $the_preserve_layer_name;
                        setAttr "defaultArnoldDriver.tiled" $the_tiled;
                        setAttr "defaultArnoldDriver.autocrop" $the_autocrop;
                        setAttr "defaultArnoldDriver.append" $the_append;
                   }
                    if($the_image_format=="deepexr")
                   {
                       $the_real_image_format="deepexr";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       
                   }
                    if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       
                   }
                     
                      
                  $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$CRENDERLAYER)`;
                  if(`objExists $the_camera`){
                  $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;   
                  $the_current_ca=`loadTheCurrentCamera`;
                  $the_camera_s=`listRelatives -s $the_camera`;
                  $the_current_ca_s=`listRelatives -s $the_current_ca`;
                  setAttr ($the_current_ca_s[0]+".renderable") 0;
                  setAttr ($the_camera_s[0]+".renderable") 1;
                  $the_width=`intField -q -v the_w`;
                  $the_height=`intField -q -v the_h`;
                  setAttr "defaultResolution.width" $the_width;
                  setAttr "defaultResolution.height" $the_height;
               
                  $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
                  $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
                  $the_AOVs=`getAOVarr`;
                  
                 
     

                   $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
          
                if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        }
                  
                  
                  if($if_interrupt==0){
                                              setAttr  "defaultRenderGlobals.postMel" -type "string" "";                                            
                       
                         setAttr -type "string" defaultRenderGlobals.preMel "";
setAttr -type "string" defaultRenderGlobals.preRenderLayerMel "";
setAttr -type "string" defaultRenderGlobals.postRenderLayerMel "";
setAttr -type "string" defaultRenderGlobals.preRenderMel "";
setAttr -type "string" defaultRenderGlobals.postRenderMel "scriptOne($if_interrupt)";
if(`attributeExists "preKeyframeMel" "vraySettings"`){
setAttr -type "string" vraySettings.preKeyframeMel "";
setAttr -type "string" vraySettings.rtImageReadyMel "";}
                         ;
           }
          }//arnold
         
          if($the_using_render=="mentalRay") {
     setAttr -type "string" "defaultRenderGlobals.currentRenderer" "mentalRay";
       
     editRenderLayerAdjustment "defaultRenderGlobals.imageFormat";
     editRenderLayerAdjustment -remove "defaultRenderGlobals.imageFormat";
     editRenderLayerAdjustment "defaultRenderGlobals.imageFilePrefix";
       if($the_image_format=="exr(32bit)")
                   {   $the_real_image_format="exr"; 
                     if(`optionMenuGrp -q -ex imageMenuMentalRay`){
                       
                         optionMenuGrp -e -v "OpenEXR (exr)" imageMenuMentalRay;
                       
                       
                       }
                    setAttr  defaultRenderGlobals.imageFormat 51;
                            if (`attributeExists "datatype" "miDefaultFramebuffer"`){
                       setAttr "miDefaultFramebuffer.datatype" 5;
                       }
                       
                      
                      
                       editRenderLayerAdjustment "mentalrayGlobals.imageCompression";
                       
                        
                        setAttr "mentalrayGlobals.imageCompression" 4; 
                   }    
     if($the_image_format=="exr(16bit)")
                   {
                if(`optionMenuGrp -q -ex imageMenuMentalRay`){  
                optionMenuGrp -e -v "OpenEXR (exr)" imageMenuMentalRay;
                     
                       }
                         setAttr  defaultRenderGlobals.imageFormat 51;
                            if (`attributeExists "datatype" "miDefaultFramebuffer"`){
                       setAttr "miDefaultFramebuffer.datatype" 16;
                       }
                       
                       editRenderLayerAdjustment "mentalrayGlobals.imageCompression";
                      setAttr "mentalrayGlobals.imageCompression" 4; 
                       
                        
                     }
                     
                       if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                     
                      setAttr  defaultRenderGlobals.imageFormat 32;
                       
                   }
                         if($the_image_format=="Targe(tga)")
                   {
                       $the_real_image_format="tga";
                       
                      setAttr  defaultRenderGlobals.imageFormat 19;
                       
                   }
                         if($the_image_format=="maya(iff)")
                   {
                       $the_real_image_format="iff";
                      
                      setAttr  defaultRenderGlobals.imageFormat 7;
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                  
                       setAttr  defaultRenderGlobals.imageFormat 3;
                       
                   }
                   
                    $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$CRENDERLAYER)`;
                    if(`objExists $the_camera`){
                  $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;   
                  $the_current_ca=`loadTheCurrentCamera`;
                  $the_camera_s=`listRelatives -s $the_camera`;
                  $the_current_ca_s=`listRelatives -s $the_current_ca`;
                  setAttr ($the_current_ca_s[0]+".renderable") 0;
                  setAttr ($the_camera_s[0]+".renderable") 1;
                  $the_width=`intField -q -v the_w`;
                  $the_height=`intField -q -v the_h`;
                  setAttr "defaultResolution.width" $the_width;
                  setAttr "defaultResolution.height" $the_height;
                  $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
                  $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
                 $the_passArr=`getPASSarr($CRENDERLAYER)`;
                 
                  $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
                  
                   if(size($the_passArr)!=0){
                          string $temp_num;
                        string $the_num_name;
                   if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            if($ifmpass==0){
                            $the_num_name=($file_name_prefix+"_<RenderPass>_"+$the_camera+"."+$temp_num);}
                            if($ifmpass==1){
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);}
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            if($ifmpass==0){
                            $the_num_name=($file_name_prefix+"_<RenderPass>_"+$the_camera+"."+$temp_num);}
                            if($ifmpass==1){
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);}
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
                        
                   
                   }// if(size($the_passArr)!=0)
                  
                  if(size($the_passArr)==0)
                  {
                              string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
                  }
                  
                  }//camera
                  if($if_interrupt==0){
                                                      setAttr  "defaultRenderGlobals.postMel" -type "string" "scriptOne($if_interrupt)";                                            
                       
                         setAttr -type "string" defaultRenderGlobals.preMel "";
setAttr -type "string" defaultRenderGlobals.preRenderLayerMel "";
setAttr -type "string" defaultRenderGlobals.postRenderLayerMel "";
setAttr -type "string" defaultRenderGlobals.preRenderMel "";
setAttr -type "string" defaultRenderGlobals.postRenderMel "";
if(`attributeExists "preKeyframeMel" "vraySettings"`){
setAttr -type "string" vraySettings.preKeyframeMel "";
setAttr -type "string" vraySettings.rtImageReadyMel "";}
                         }
 }
         
         if($the_using_render=="mayaSoftware"){
             
             setAttr -type "string" "defaultRenderGlobals.currentRenderer" "mayaSoftware";
                
                    editRenderLayerAdjustment "defaultRenderGlobals.imageFormat";
                    editRenderLayerAdjustment -remove "defaultRenderGlobals.imageFormat";
                    editRenderLayerAdjustment "defaultRenderGlobals.imageFilePrefix";
                       
                  if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                      setAttr  defaultRenderGlobals.imageFormat 32;  
                       
                   }
                         if($the_image_format=="Targe(tga)")
                   {
                       $the_real_image_format="tga";
                      setAttr  defaultRenderGlobals.imageFormat 19;
                       
                   }
                         if($the_image_format=="maya(iff)")
                   {
                       $the_real_image_format="iff";
                      setAttr  defaultRenderGlobals.imageFormat 7;
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       setAttr  defaultRenderGlobals.imageFormat 3;
                       
                   }
                  $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$CRENDERLAYER)`;
                    if(`objExists $the_camera`){
                  $the_current_ca=`loadTheCurrentCamera`;
                  $the_camera_s=`listRelatives -s $the_camera`;
                  $the_current_ca_s=`listRelatives -s $the_current_ca`;
                  setAttr ($the_current_ca_s[0]+".renderable") 0;
                  setAttr ($the_camera_s[0]+".renderable") 1;
                  $the_width=`intField -q -v the_w`;
                  $the_height=`intField -q -v the_h`;
                  setAttr "defaultResolution.width" $the_width;
                  setAttr "defaultResolution.height" $the_height;
                  $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
                  $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
             
             
             
                      
                        $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
                         $cframe=`currentTime -q`;
                        string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
             
             
             }//ca
             if($if_interrupt==0){
                                                setAttr  "defaultRenderGlobals.postMel" -type "string" "scriptOne($if_interrupt)";                                            
                       
                         setAttr -type "string" defaultRenderGlobals.preMel "";
setAttr -type "string" defaultRenderGlobals.preRenderLayerMel "";
setAttr -type "string" defaultRenderGlobals.postRenderLayerMel "";
setAttr -type "string" defaultRenderGlobals.preRenderMel "";
setAttr -type "string" defaultRenderGlobals.postRenderMel "";
if(`attributeExists "preKeyframeMel" "vraySettings"`){
setAttr -type "string" vraySettings.preKeyframeMel "";
setAttr -type "string" vraySettings.rtImageReadyMel "";}
                         }
         }
         
        

if($the_using_render=="vray") {
     setAttr -type "string" "defaultRenderGlobals.currentRenderer" "vray";
       setAttr "vraySettings.separateAlpha" 0;
       setAttr "vraySettings.animBatchOnly" 1;
       setAttr "vraySettings.relements_usereferenced" 0;
       setAttr "vraySettings.relements_separateFolders" 0;
       setAttr -type "string" "vraySettings.fileNameRenderElementSeparator" "_";
     editRenderLayerAdjustment "vraySettings.imageFormatStr";
     
     editRenderLayerAdjustment "vraySettings.fileNamePrefix";
       if($the_image_format=="exr(32bit)")
                   {   $the_real_image_format="exr"; 
                   setAttr "vraySettings.imgOpt_exr_bitsPerChannel" 32;
                    
                    if(`checkBox -q -v cb_m_RES`==0){
                    setAttr -type "string" "vraySettings.imageFormatStr" "exr";}
                        if(`checkBox -q -v cb_m_RES`==1){
                       setAttr -type "string" "vraySettings.imageFormatStr" "exr (multichannel)";
                       }
                    
                      
                      editRenderLayerAdjustment "vraySettings.imgOpt_exr_compression";
                       
                        
                        setAttr "vraySettings.imgOpt_exr_compression" 3; 
                   }    
   if($the_image_format=="exr(16bit)")
                   {   $the_real_image_format="exr"; 
                   setAttr "vraySettings.imgOpt_exr_bitsPerChannel" 16;
                    
                    if(`checkBox -q -v cb_m_RES`==0){
                    setAttr -type "string" "vraySettings.imageFormatStr" "exr";}
                        if(`checkBox -q -v cb_m_RES`==1){
                       setAttr -type "string" "vraySettings.imageFormatStr" "exr (multichannel)";
                       }
                    
                      
                      editRenderLayerAdjustment "vraySettings.imgOpt_exr_compression";
                       
                        
                        setAttr "vraySettings.imgOpt_exr_compression" 3; 
                   }    
                   
                     
                       if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                      setAttr -type "string" "vraySettings.imageFormatStr" "png";
                       
                   }
                         if($the_image_format=="Targe(tga)")
                   {
                       $the_real_image_format="tga";
                      setAttr -type "string" "vraySettings.imageFormatStr" "tga";
                       
                   }
                         
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       setAttr -type "string" "vraySettings.imageFormatStr" "tif";
                       
                   }
                   
                    $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$CRENDERLAYER)`;
                    if(`objExists $the_camera`){
                  $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;   
                  $the_current_ca=`loadTheCurrentCamera`;
                  $the_camera_s=`listRelatives -s $the_camera`;
                  $the_current_ca_s=`listRelatives -s $the_current_ca`;
                  setAttr ($the_current_ca_s[0]+".renderable") 0;
                  setAttr ($the_camera_s[0]+".renderable") 1;
                  $the_width=`intField -q -v the_w`;
                  $the_height=`intField -q -v the_h`;
               
                  setAttr "vraySettings.width" $the_width;
                  setAttr "vraySettings.height" $the_height;
                  floatFieldGrp -e -v1  1 vrayPixAspect;
	                    setAttr vraySettings.pixelAspect 1;
	                    setAttr defaultResolution.pixelAspect 1;
                  adjustVrayDeviceAspect();
	                vrayUpdateResolution();
                  $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
                  $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
                 $the_passArr=`getPASSarr($CRENDERLAYER)`;
                 $the_RESArr=`getVREE($CRENDERLAYER)`;
                 
                  $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
                  
                
                          string $temp_num;
                        string $the_num_name;
                   if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                      
                           
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" "vraySettings.fileNamePrefix" $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                          
                           
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" "vraySettings.fileNamePrefix" $the_num_name;
                        }
                        
                        
                   
                   
                  
                
                  
                  }//camera
                  if($if_interrupt==0){
                         setAttr  "defaultRenderGlobals.postMel" -type "string" "scriptOne($if_interrupt)";                                            
                       
                         setAttr -type "string" defaultRenderGlobals.preMel "";
setAttr -type "string" defaultRenderGlobals.preRenderLayerMel "";
setAttr -type "string" defaultRenderGlobals.postRenderLayerMel "";
setAttr -type "string" defaultRenderGlobals.preRenderMel "";
setAttr -type "string" defaultRenderGlobals.postRenderMel "";
if(`attributeExists "preKeyframeMel" "vraySettings"`){
setAttr -type "string" vraySettings.preKeyframeMel "";
setAttr -type "string" vraySettings.rtImageReadyMel "";}
                         
                         
                         
                         }
 }
         
        
        
          
        //  setAttr time1.index_frame 0;
         string $time_c1 = `system "time"`;
                        setAttr  -type "string" ("time1.start_time") $time_c1;
                         string $log_file=`getAttr ("time1.log_name")`;

         print ("当前层 ： "+$CRENDERLAYER+"  当前帧 ： "+$cframe+"\n");
            renderWindowRenderCamera ("render","renderView",$the_camera);
            
      }

 
  









}  //if(`getAttr ($CRENDERLAYER+".renderable")`==1)



}
//////
//设置6个cb

global proc set6cb(){
string $getRLNameall=`iconTextRadioCollection -q -sl witch_RL_sl`;

string $getRLName=`substring $getRLNameall 8 (size($getRLNameall))`;
string $getRenderNameall=`optionMenuGrp -q -v ("witch_render_"+$getRLName)`;
string $gatIfmNameall=`optionMenuGrp -q -v ("witch_the_format_"+$getRLName)`;
if($getRenderNameall=="arnold")
{
  string $tm[]=`getAOVarr`;
 if(`size($tm)`>0){
 checkBox  -e -en 1  cb_m_aovs; }
  if(`size($tm)`==0){
 checkBox  -e -en 0  cb_m_aovs; }
 
 if($gatIfmNameall=="exr(16bit)"||$gatIfmNameall=="exr(32bit)")
{
 checkBox  -e -en 1  cb_Preserve;   
 checkBox  -e -en 1  cb_Tiled;   
 checkBox  -e -en 1  cb_Autocrop;   
 checkBox  -e -en 1  cb_append;  
 
   
}    
if($gatIfmNameall!="exr(16bit)"&&$gatIfmNameall!="exr(32bit)")
{
 checkBox  -e -en 0  cb_Preserve;   
 checkBox  -e -en 0  cb_Tiled;   
 checkBox  -e -en 0  cb_Autocrop;   
 checkBox  -e -en 0  cb_append;  
 
   
}    
}



if($getRenderNameall!="arnold")
{
 checkBox  -e -en 0  cb_Preserve;   
 checkBox  -e -en 0  cb_Tiled;   
 checkBox  -e -en 0  cb_Autocrop;   
 checkBox  -e -en 0  cb_append;  
 checkBox  -e -en 0  cb_m_aovs;
}


string $t[]=`getPASSarr($getRLName)`;
if($getRenderNameall=="mentalRay")
{

if(`size($t)`!=0)
 {
 checkBox  -e -en 1  cb_m_passes; }   
 if(`size($t)`==0)
 {
 checkBox  -e -en 0  cb_m_passes; }   
}
if($getRenderNameall!="mentalRay")
{

 
 checkBox  -e -en 0  cb_m_passes;    
}
 string $t2[];
  string $t3;
if($getRenderNameall=="vray")
{  
   
   $t2=`getVREE($getRLName)`;
$t3=`getIM_v($getRLName)`;
    checkBox  -e -en 1  cb_m_RES;
    if($t3=="exr (multichannel)"){checkBox  -e -v 1  cb_m_RES;}
   if(size($t2)>0){checkBox  -e -en 1  cb_m_RES;}
   if(size($t2)==0){checkBox  -e -en 0  cb_m_RES;}
}
if($getRenderNameall!="vray")
{  

    
    checkBox  -e -en 0  cb_m_RES;
}

}


//注意：修正地址
global proc fix_path(){
string $the_output_path=`textField -q -tx  path_loc`;


if(`endsWith $the_output_path "\\"`!=1)
{
    textField -e -tx ($the_output_path+"\\") path_loc;
    
    };

}


//注：主渲染程序   




global proc mainProcOfRender()
{
python ("import maya.cmds as cmds");
python ("import maya.mel as mel");
python ("import os.path");

if (`text -q -ex stop`==0){text -vis 0 -p  main_pro stop;}
    int $if_interrupt=0;
 string $allRenderLayer[]=`ls  -type "renderLayer"`;
 
$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
    {
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
    
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);
procToZ($allRenderLayer);

string $theTimeNode[]=`ls -type time`;
string $file_name_prefix;
int $the_start_frame;
//int $getdl=`textField -q -tx the_dl`;
int $the_end_frame;
string $the_using_render;
string $the_camera;
int $ifmaov=`checkBox -q -v cb_m_aovs`;
int $ifmpass=`checkBox -q -v cb_m_passes`;
if(`attributeExists mergeAOVs defaultArnoldDriver`){setAttr "defaultArnoldDriver.mergeAOVs" $ifmaov;}
if(`attributeExists outputMode defaultArnoldDriver`){setAttr "defaultArnoldDriver.outputMode" 2; }
string $the_camera_s[];
string $the_current_ca;
string $the_current_ca_s[];
string $the_image_format;
string $the_real_image_format;
string $the_compression;
int $the_preserve_layer_name;
int $the_tiled;
int $the_autocrop;
int $the_append;
string $the_aovs;
string $the_pass;
string $the_passArr[];
string $the_RESArr[];
string $the_output_path;
$the_output_path=`textField -q -tx  path_loc`;
int $the_width;
int $the_height;
int $the_padding;
string $the_AOVs[];
int $the_enabledExists;
string $the_output_path_L=`fromNativePath($the_output_path)`;
string $the_scene_name=`getTheSceneName`;
string $new_path;
int $cframe;
int $allf=getAllF();
setMayaSoftwareFrameExt(2,0);
rowColumnLayout -e -en  0 main_layout; 

//////////查目前时间
string $time_c = `system "time"`;
string $date_c = `system "date"`;
string $time_c_r=`match "[0-9]*:[0-9]*:[0-9]*" $time_c`;
string $date_c_r=`match "[0-9]*/[0-9]*/[0-9]*" $date_c`;
string $time_c_rr=substituteAllString($time_c_r,":","");
if(size($time_c_rr)==5){$time_c_rr=("0"+$time_c_rr);}
string $date_c_rr=substituteAllString($date_c_r,"/","");

string $defaultLocation_temp= `workspace -en images`;

sysFile -makeDir ($defaultLocation_temp+"/Render_log/"+$the_scene_name);

string $log_file=($defaultLocation_temp+"/Render_log/"+$the_scene_name+"/log_"+$the_scene_name+"_"+$date_c_rr+"_"+$time_c_rr+".txt");

//生成log文件
python("f=open('"+$log_file+"','w')");
python("f.write('场景名：   "+$the_scene_name+"'+'        渲染开始时间:"+$date_c_r+"  "+$time_c_r+"'+'\\r\\n\\r\\n====================================================\\r\\n')");
python("f.close()");


string $mynode_all[]=`ls -type "time"`;
string $mynode="time1";
if (`objExists "time1"`==0)
{createNode  "" -n "time1";}
if(`attributeExists "index_frame" $mynode`==0){
addAttr -ln "index_frame"  -at long  -dv 0 $mynode;
setAttr -e-keyable true ($mynode+".index_frame");
//setAttr -lock true -keyable false -channelBox false "time1.index_frame";
}
setAttr ($mynode+".index_frame") 0;

if(`attributeExists "start_time" $mynode`==0){
addAttr -ln "start_time"  -dt "string"  $mynode;
setAttr -e-channelBox true ($mynode+".start_time");
}
setAttr  -type "string" ($mynode+".start_time") $time_c_r;

if(`attributeExists "log_name" $mynode`==0){
addAttr -ln "log_name"  -dt "string"  $mynode;
setAttr -e-channelBox true ($mynode+".log_name");
}

setAttr  -type "string" ($mynode+".log_name") $log_file;

if(`attributeExists "layer_time" $mynode`==0){
addAttr -ln "layer_time"  -at long  -dv 0 $mynode;
setAttr -e-keyable true ($mynode+".layer_time");

}
setAttr ($mynode+".layer_time") 0;

  int $index_RL=1;
     int $c_f=0;
     
      editRenderLayerGlobals  -crl $allRenderLayer[$num_Layer-$index_RL];
      string $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;
              string $del_path=($the_output_path_L+"tmp/"+$CRENDERLAYER+"/");
                      string $all_del[]= `getFileList -fld $del_path`;
                 for ($del_file in $all_del){
                 sysFile  -del ($del_path+"/"+$del_file);
                 }
     ///   progressBar -e -ep ("proBar_render_"+$CRENDERLAYER);
    //  progressBar -e -bp -w 500 ("proBar_render_"+$CRENDERLAYER);

            $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$CRENDERLAYER)`;

             
             $new_path=($the_output_path_L+$the_scene_name+"/"+$CRENDERLAYER);
             
            if(`getAttr ($CRENDERLAYER+".renderable")`==1)
            {    
            sysFile -makeDir $new_path;
                $the_padding=`optionMenuGrp -q -v the_padding`;
                $the_using_render=`optionMenuGrp -q -v ("witch_render_"+$CRENDERLAYER)`;
                
                editRenderLayerGlobals -crl $allRenderLayer[$num_Layer-$index_RL];
                
                editRenderLayerAdjustment "defaultRenderGlobals.currentRenderer";
                editRenderLayerAdjustment "defaultRenderGlobals.imageFilePrefix";
                 $the_image_format=`optionMenuGrp -q -v ("witch_the_format_"+$CRENDERLAYER)`;
               
               /////////////
                if($the_using_render=="arnold") 
                {
                   setAttr -type "string" "defaultRenderGlobals.currentRenderer" "arnold";
                    if($the_image_format=="exr(32bit)")
                   {   $the_real_image_format="exr";
                  
                       editRenderLayerAdjustment "defaultArnoldDriver.exrCompression";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       setAttr "defaultArnoldDriver.halfPrecision" 0;
                        //$the_compression=`optionMenuGrp -q -v ("witch_the_compression_"+$CRENDERLAYER)`;
                       
                      
                           setAttr "defaultArnoldDriver.exrCompression" 3; 
                       
                        if(`rowColumnLayout -q -en the4box`){
                        $the_preserve_layer_name=`checkBox -q -v cb_Preserve`;
                        $the_tiled=`checkBox -q -v cb_Tiled`;
                        $the_autocrop=`checkBox -q -v cb_Autocrop`;
                        $the_append=`checkBox -q -v  cb_append`;
                        if (`objExists defaultArnoldDriver`){
                        setAttr "defaultArnoldDriver.preserveLayerName" $the_preserve_layer_name;
                        setAttr "defaultArnoldDriver.tiled" $the_tiled;
                        setAttr "defaultArnoldDriver.autocrop" $the_autocrop;
                        setAttr "defaultArnoldDriver.append" $the_append;}}
                   }
                    if($the_image_format=="exr(16bit)")
                   {
                       $the_real_image_format="exr";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       setAttr "defaultArnoldDriver.halfPrecision" 1;
                        //$the_compression=`optionMenuGrp -q -v ("witch_the_compression_"+$CRENDERLAYER)`;
                        
                      
                       
                           setAttr "defaultArnoldDriver.exrCompression" 3; 
                       
                        $the_preserve_layer_name=`checkBox -q -v cb_Preserve`;
                        $the_tiled=`checkBox -q -v cb_Tiled`;
                        $the_autocrop=`checkBox -q -v cb_Autocrop`;
                        $the_append=`checkBox -q -v  cb_append`;
                        setAttr "defaultArnoldDriver.preserveLayerName" $the_preserve_layer_name;
                        setAttr "defaultArnoldDriver.tiled" $the_tiled;
                        setAttr "defaultArnoldDriver.autocrop" $the_autocrop;
                        setAttr "defaultArnoldDriver.append" $the_append;
                   }
                    if($the_image_format=="deepexr")
                   {
                       $the_real_image_format="deepexr";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       
                   }
                    if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       setAttr -type "string" defaultArnoldDriver.aiTranslator $the_real_image_format;
                       
                   }
                     
                      
                  $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$CRENDERLAYER)`;
                  if(`objExists $the_camera`){
                  $the_current_ca=`loadTheCurrentCamera`;
                  $the_camera_s=`listRelatives -s $the_camera`;
                  $the_current_ca_s=`listRelatives -s $the_current_ca`;
                  setAttr ($the_current_ca_s[0]+".renderable") 0;
                  setAttr ($the_camera_s[0]+".renderable") 1;
                  $the_width=`intField -q -v the_w`;
                  $the_height=`intField -q -v the_h`;
                  setAttr "defaultResolution.width" $the_width;
                 
                  setAttr "defaultResolution.height" $the_height;
            
                  $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
                  $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
                  $the_AOVs=`getAOVarr`;
                  string $temp_num;
                  string $the_num_name;
     
                  currentTime $the_start_frame;
                  
                  $cframe=`currentTime -q`;
        

                        
                        
                        

                             
                                 
                     
                             
  
                         
                        $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
                        
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
                   
            
                           
                            string $time_c1 = `system "time"`;
                          setAttr  -type "string" ($mynode+".start_time") $time_c1;
                       editRenderLayerAdjustment -remove "defaultRenderGlobals.postRenderMel";
                     setAttr  "defaultRenderGlobals.postMel" -type "string" "";
                    setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "scriptOne($if_interrupt)";
                      
                    tearOffPanel "Render View" "renderWindowPanel" true;
                            print ("当前层 ： "+$CRENDERLAYER+"  当前帧 ： "+$cframe+"\n");
                          setAttr "defaultResolution.pixelAspect" 1;
                        renderWindowRenderCamera ("render","renderView",$the_camera);
                        
                        
           

                    
                   }//camera
                  
                     
                        
                            
                        
                 
                     
                        
                       
                   }//arnold

                 
                
                  
             
           
           
         
                
                if($the_using_render=="mentalRay") 
                { 
                
                
                setAttr -type "string" "defaultRenderGlobals.currentRenderer" "mentalRay";
           
                    editRenderLayerAdjustment "defaultRenderGlobals.imageFormat";
                     editRenderLayerAdjustment -remove "defaultRenderGlobals.imageFormat";
                    editRenderLayerAdjustment "defaultRenderGlobals.imageFilePrefix";
                    if($the_image_format=="exr(32bit)")
                   {   $the_real_image_format="exr"; 
                   
                        if(`optionMenuGrp -q -ex imageMenuMentalRay`){  
                optionMenuGrp -e -v "OpenEXR (exr)" imageMenuMentalRay;
                       
                       }
                      setAttr  defaultRenderGlobals.imageFormat 51;
                            if (`attributeExists "datatype" "miDefaultFramebuffer"`){
                       setAttr "miDefaultFramebuffer.datatype" 5;
                       }
                       
                       
                       
                       editRenderLayerAdjustment "mentalrayGlobals.imageCompression";
                        
                        
                       
                        
                       
                           setAttr "mentalrayGlobals.imageCompression" 4; 
                       
                       
                    }    
                    if($the_image_format=="exr(16bit)")
                   {
                       $the_real_image_format="exr";
                        
                                      if(`optionMenuGrp -q -ex imageMenuMentalRay`){  
                optionMenuGrp -e -v "OpenEXR (exr)" imageMenuMentalRay;
                       
                       }
                       setAttr  defaultRenderGlobals.imageFormat 51;
                       if (`attributeExists "datatype" "miDefaultFramebuffer"`){
                       setAttr "miDefaultFramebuffer.datatype" 16;
                       }
                       
                      
                        

                        
                           setAttr "mentalrayGlobals.imageCompression" 4; 
                      
                        
                     }
                    if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                      setAttr  defaultRenderGlobals.imageFormat 32;
                       
                   }
                         if($the_image_format=="Targe(tga)")
                   {
                       $the_real_image_format="tga";
                      setAttr  defaultRenderGlobals.imageFormat 19;
                       
                   }
                         if($the_image_format=="maya(iff)")
                   {
                       $the_real_image_format="iff";
                      setAttr  defaultRenderGlobals.imageFormat 7;
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       setAttr  defaultRenderGlobals.imageFormat 3;
                       
                   }
                  $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$allRenderLayer[$num_Layer-$index_RL])`;
                  if(`objExists $the_camera`){
                  $the_current_ca=`loadTheCurrentCamera`;
                  $the_camera_s=`listRelatives -s $the_camera`;
                  $the_current_ca_s=`listRelatives -s $the_current_ca`;
                  setAttr ($the_current_ca_s[0]+".renderable") 0;
                  setAttr ($the_camera_s[0]+".renderable") 1;
                  $the_width=`intField -q -v the_w`;
                  $the_height=`intField -q -v the_h`;
                  setAttr "defaultResolution.width" $the_width;
                  setAttr "defaultResolution.height" $the_height;
                  $the_start_frame=`intField -q -v ("startFrame_"+$allRenderLayer[$num_Layer-$index_RL])`;
                  $the_end_frame=`intField -q -v ("endFrame_"+$allRenderLayer[$num_Layer-$index_RL])`;
                  $the_passArr=`getPASSarr($allRenderLayer[$num_Layer-$index_RL])`;
                  
                  if(size($the_passArr)!=0)
                  {
                  
                  
                  currentTime $the_start_frame;
                 
                  $cframe=`currentTime -q`;
                      
                   
                  
  
                      
                        $file_name_prefix=`textField -q -tx ("fileName_"+$allRenderLayer[$num_Layer-$index_RL])`; 
                          
                        string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            if($ifmpass==0){
                            $the_num_name=($file_name_prefix+"_<RenderPass>_"+$the_camera+"."+$temp_num);}
                            if($ifmpass==1){
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);}
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            if($ifmpass==0){
                            $the_num_name=($file_name_prefix+"_<RenderPass>_"+$the_camera+"."+$temp_num);}
                            if($ifmpass==1){
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);}
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
                        

                       
                       
                     }
                    
                   
                      if(size($the_passArr)==0)  
                   {
                        
                
                 currentTime $the_start_frame;
                  
                  $cframe=`currentTime -q`;
                      

  
                      
                        $file_name_prefix=`textField -q -tx ("fileName_"+$allRenderLayer[$num_Layer-$index_RL])`; 
                          setAttr -type "string" "defaultRenderGlobals.imageFilePrefix" ($file_name_prefix);
                        string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
                        
                      

                    
                  
                         
                                    }
                                    
                                    
                            
                   }
                         string $time_c1 = `system "time"`;
                        setAttr  -type "string" ($mynode+".start_time") $time_c1;
                                    editRenderLayerAdjustment -remove "defaultRenderGlobals.postRenderMel";
                            setAttr  "defaultRenderGlobals.postMel" -type "string" "scriptOne($if_interrupt)";                                            
                         setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "";
 
                           tearOffPanel "Render View" "renderWindowPanel" true; 
                           print ("当前层 ： "+$CRENDERLAYER+"  当前帧 ： "+$cframe+"\n");
                          setAttr "defaultResolution.pixelAspect" 1;
                        renderWindowRenderCamera ("render","renderView",$the_camera);    
                       
                 
}
                        
                       
                  
                   
                  ///////////////
                   
                  

if($the_using_render=="vray") {
     setAttr -type "string" "defaultRenderGlobals.currentRenderer" "vray";
       setAttr "vraySettings.separateAlpha" 0;
       setAttr "vraySettings.animBatchOnly" 1;
       setAttr "vraySettings.relements_usereferenced" 0;
       setAttr "vraySettings.relements_separateFolders" 0;
       setAttr -type "string" "vraySettings.fileNameRenderElementSeparator" "_";
     editRenderLayerAdjustment "vraySettings.imageFormatStr";
   //  editRenderLayerAdjustment -remove "vraySettings.imageFormatStr";
     editRenderLayerAdjustment "vraySettings.fileNamePrefix";
       if($the_image_format=="exr(32bit)")
                   {   $the_real_image_format="exr"; 
                   setAttr "vraySettings.imgOpt_exr_bitsPerChannel" 32;
                    
                    if(`checkBox -q -v cb_m_RES`==0){
                    setAttr -type "string" "vraySettings.imageFormatStr" "exr";}
                        if(`checkBox -q -v cb_m_RES`==1){
                       setAttr  -type "string" "vraySettings.imageFormatStr" "exr (multichannel)";
                       }
                    
                      
                      editRenderLayerAdjustment "vraySettings.imgOpt_exr_compression";
                       
                        
                        setAttr "vraySettings.imgOpt_exr_compression" 3; 
                   }    
   if($the_image_format=="exr(16bit)")
                   {   $the_real_image_format="exr"; 
                   setAttr "vraySettings.imgOpt_exr_bitsPerChannel" 16;
                    
                    if(`checkBox -q -v cb_m_RES`==0){
                    setAttr -type "string" "vraySettings.imageFormatStr" "exr";}
                        if(`checkBox -q -v cb_m_RES`==1){
                       setAttr -type "string" "vraySettings.imageFormatStr" "exr (multichannel)";
                       }
                    
                      
                      editRenderLayerAdjustment "vraySettings.imgOpt_exr_compression";
                       
                        
                        setAttr "vraySettings.imgOpt_exr_compression" 3; 
                   }    
                   
                     
                       if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                      setAttr -type "string" "vraySettings.imageFormatStr" "png";
                       
                   }
                         if($the_image_format=="Targe(tga)")
                   {
                       $the_real_image_format="tga";
                      setAttr  -type "string" "vraySettings.imageFormatStr" "tga";
                       
                   }
                         
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       setAttr  -type "string" "vraySettings.imageFormatStr" "tif";
                       
                   }
                   
                    $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$CRENDERLAYER)`;
                    if(`objExists $the_camera`){
                  $CRENDERLAYER=`editRenderLayerGlobals -q  -crl`;   
                  $the_current_ca=`loadTheCurrentCamera`;
                  $the_camera_s=`listRelatives -s $the_camera`;
                  $the_current_ca_s=`listRelatives -s $the_current_ca`;
                  setAttr ($the_current_ca_s[0]+".renderable") 0;
                  setAttr ($the_camera_s[0]+".renderable") 1;
                  $the_width=`intField -q -v the_w`;
                  $the_height=`intField -q -v the_h`;
                      
                  setAttr "vraySettings.width" $the_width;
                  setAttr "vraySettings.height" $the_height;
                   floatFieldGrp -e -v1  1 vrayPixAspect;
	                    setAttr vraySettings.pixelAspect 1;
	                    setAttr defaultResolution.pixelAspect 1;
                  adjustVrayDeviceAspect();
	                vrayUpdateResolution();
                  $the_start_frame=`intField -q -v ("startFrame_"+$CRENDERLAYER)`;
                  $the_end_frame=`intField -q -v ("endFrame_"+$CRENDERLAYER)`;
                 $the_passArr=`getPASSarr($CRENDERLAYER)`;
                 $the_RESArr=`getVREE($CRENDERLAYER)`;
                         currentTime $the_start_frame;
                  
                  $cframe=`currentTime -q`;
                  $file_name_prefix=`textField -q -tx ("fileName_"+$CRENDERLAYER)`; 
                  
                
                          string $temp_num;
                        string $the_num_name;
                   if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                      
                           
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" "vraySettings.fileNamePrefix" $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                          
                           
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" "vraySettings.fileNamePrefix" $the_num_name;
                        }
                        
                        
                   
                   
                  
                
                  
                  }//camera
                  string $time_c1 = `system "time"`;
                        setAttr  -type "string" ($mynode+".start_time") $time_c1;
                                    editRenderLayerAdjustment -remove "defaultRenderGlobals.postRenderMel";
                         setAttr  "defaultRenderGlobals.postMel" -type "string" "scriptOne($if_interrupt)";
                           setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "";
 
                           tearOffPanel "Render View" "renderWindowPanel" true; 
                           print ("当前层 ： "+$CRENDERLAYER+"  当前帧 ： "+$cframe+"\n");
                        
                        renderWindowRenderCamera ("render","renderView",$the_camera);  
 }
         /////////////////
                   
                 
              
                if($the_using_render=="mayaSoftware") 
                { setAttr -type "string" "defaultRenderGlobals.currentRenderer" "mayaSoftware";
                
                    editRenderLayerAdjustment "defaultRenderGlobals.imageFormat";
                    editRenderLayerAdjustment "defaultRenderGlobals.imageFilePrefix";
                    
                  if($the_image_format=="PNG(png)")
                   {
                       $the_real_image_format="png";
                      setAttr  defaultRenderGlobals.imageFormat 32;  
                       
                   }
                         if($the_image_format=="Targe(tga)")
                   {
                       $the_real_image_format="tga";
                      setAttr  defaultRenderGlobals.imageFormat 19;
                       
                   }
                         if($the_image_format=="maya(iff)")
                   {
                       $the_real_image_format="iff";
                      setAttr  defaultRenderGlobals.imageFormat 7;
                       
                   }
                    if($the_image_format=="TIFF(tif)")
                   {
                       $the_real_image_format="tif";
                       setAttr  defaultRenderGlobals.imageFormat 3;
                       
                   }
                  $the_camera = `optionMenuGrp -q -v ("witch_the_camera_"+$allRenderLayer[$num_Layer-$index_RL])`;
                  if(`objExists $the_camera`){
                  $the_current_ca=`loadTheCurrentCamera`;
                  $the_camera_s=`listRelatives -s $the_camera`;
                  $the_current_ca_s=`listRelatives -s $the_current_ca`;
                  setAttr ($the_current_ca_s[0]+".renderable") 0;
                  setAttr ($the_camera_s[0]+".renderable") 1;
                  $the_width=`intField -q -v the_w`;
                  $the_height=`intField -q -v the_h`;
                  setAttr "defaultResolution.width" $the_width;
                  setAttr "defaultResolution.height" $the_height;
                  $the_start_frame=`intField -q -v ("startFrame_"+$allRenderLayer[$num_Layer-$index_RL])`;
                  $the_end_frame=`intField -q -v ("endFrame_"+$allRenderLayer[$num_Layer-$index_RL])`;
                  $the_passArr=`getPASSarr($allRenderLayer[$num_Layer-$index_RL])`;
                  
                  
                 
                  
                      
                   
                 
                        
                       
                                     currentTime $the_start_frame;
                  
                  $cframe=`currentTime -q`;        
                       
                                 
                           
  
                      
                        $file_name_prefix=`textField -q -tx ("fileName_"+$allRenderLayer[$num_Layer-$index_RL])`; 
                         $cframe=`currentTime -q`;
                        string $temp_num;
                        string $the_num_name;
                        if($cframe>=0)
                        {   
                            $temp_num=FileNum($the_padding,$cframe);
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        else
                        {   
                            $temp_num=("-"+FileNum($the_padding,abs($cframe)));
                            $the_num_name=($file_name_prefix+"_"+$the_camera+"."+$temp_num);
                            setAttr -type "string" defaultRenderGlobals.imageFilePrefix $the_num_name;
                        }
                        
                        string $time_c1 = `system "time"`;
                        setAttr  -type "string" ($mynode+".start_time") $time_c1;
                    setAttr  "defaultRenderGlobals.postMel" -type "string" "scriptOne($if_interrupt)";                                            
                         setAttr  "defaultRenderGlobals.postRenderMel" -type "string" "";
 
                           tearOffPanel "Render View" "renderWindowPanel" true; 
                           print ("当前层 ： "+$CRENDERLAYER+"  当前帧 ： "+$cframe+"\n");
                           setAttr "defaultResolution.pixelAspect" 1;
                        renderWindowRenderCamera ("render","renderView",$the_camera);    
                       
                 

                                   
                            
                 
                        
                            
                        }
                 

                        
                       
                  
                   
                  
                  
                   
                 }
               //setAttr -type "string" defaultRenderGlobals.imageFilePrefix $file_name_prefix; 
            }
             
         
/////////////////////////////////////////////////////////////////////////////////////////////
}

 
//注：是否渲染
global proc if_render(string $allRenderLayer[],int $num_Layer){
if (`text -q -ex stop`==0){text -vis 0 -p  main_pro stop;}
string $sureRender=`confirmDialog -icn "question"  -title "请作最后确认 " -message "   立即正式渲染？\n（确认前请务必检查渲染设置，确保没有红色报错选项）"
    -button "Yes" -button "No" -defaultButton "Yes"
    -cancelButton "No" -dismissString "No"`;
     int $temp_hwin=$num_Layer*35;
int $height_rlWin=`clamp 120 230 $temp_hwin`;

 if ($sureRender=="Yes"&&`check_error3($allRenderLayer)`==0)  { rowColumnLayout -e -vis 1 -en 1 -h ($height_rlWin+15) main_pro;mainProcOfRender;}
 if ($sureRender=="Yes"&&`check_error3($allRenderLayer)`==1) {confirmDialog -icn "warning" -title "错误！" -message "无法渲染，请检查UFR渲染设置面板，是否有红色报错选项" -button "关闭";} 
   }
 
//////注：设置进程布局是否隐藏
global proc if_vis_pro(int $num_Layer){
int $temp_hwin=$num_Layer*35;
global int $temp_oc;

int $height_rlWin=`clamp 120 230 $temp_hwin`;
if(`rowColumnLayout -q  -vis  main_pro`==0){
if ($temp_oc==0){
rowColumnLayout -e -vis 1 -en 1 -h ($height_rlWin+15) main_pro;

rowColumnLayout -e -h ($height_rlWin+280) main_layout;}
if ($temp_oc==1){
rowColumnLayout -e -vis 1 -en 1 -h ($height_rlWin+15) main_pro;

rowColumnLayout -e -h ($height_rlWin+680) main_layout;}

}
else{
rowColumnLayout -e -vis 0 -en 0 -h 1 main_pro;
if ($temp_oc==0){
rowColumnLayout -e -h ($height_rlWin+140) main_layout;
window -e -h ($height_rlWin+140) -sizeable 0 -tlb 0 crazySheep_render ;}
if ($temp_oc==1){
rowColumnLayout -e -h ($height_rlWin+640) main_layout;
window -e -h ($height_rlWin+640) -sizeable 0 -tlb 0 crazySheep_render ;}


}
}


//注：预先检查渲染器
global proc string if_plug_render(){
    
   string $all_render[]= `renderer -query -namesOfAvailableRenderers`;
    string $if_a="";
    string $if_m="";
    string $if_v="";
    string $final_NoRender;
    if(`stringArrayContains "arnold" $all_render`==0){$if_a="arnold";}
    if(`stringArrayContains "mentalRay" $all_render`==0){$if_m="mentalRay";}
    if(`stringArrayContains "vray" $all_render`==0){$if_v="vray";}
    $final_NoRender=($if_a+" "+$if_m+" "+$if_v);
    return $final_NoRender;
}



global proc if_enter(){
string $over_1=`if_plug_render`;
if(size($over_1)>2){
string $GameOver=`confirmDialog -title "提示" -message ("本场景尚未加载以下渲染器\n     "+$over_1)
    -icon "warning" -button "确定" -defaultButton "确定"
    `;
if ($GameOver=="确定"){if_start_window;}
}
else{if_start_window;}
}


global proc if_start_window(){

//注：读取场景渲染基本信息
int $if_interrupt=0;
int $temp_CD=1-(`getAttr "defaultRenderLayer.renderable"`);
setAttr "defaultRenderLayer.renderable" ($temp_CD) ;
setAttr "defaultRenderLayer.renderable" (1-$temp_CD) ;
string $allRenderLayer[]=`ls  -type "renderLayer"`;

$allRenderLayer=`stringArrayRemove {"defaultRenderLayer"} $allRenderLayer`;
string $temp_arr[];
for ($rdb in $allRenderLayer)
{
    if(`getAttr ($rdb+".renderable")`!=1){$temp_arr[size($temp_arr)]=$rdb;}
    }
$allRenderLayer=`stringArrayRemove $temp_arr $allRenderLayer`;    
    
clear $temp_arr;
int $num_Layer=`size($allRenderLayer)`;

string $temp_arr2[];
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="arnold")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mentalRay")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}

for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`=="mayaSoftware")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}
}
for ($n=0;$n<$num_Layer;$n++){
if(`getURofRL($allRenderLayer[$n])`!="mayaSoftware"&&`getURofRL($allRenderLayer[$n])`!="mentalRay"&&`getURofRL($allRenderLayer[$n])`!="arnold"&&`getURofRL($allRenderLayer[$n])`!="vray")
{
    $temp_arr2[size($temp_arr2)]=$allRenderLayer[$n];
}

}
$allRenderLayer=$temp_arr2;
clear $temp_arr2;$allRenderLayer =changeOrderOfArr($allRenderLayer);

python "import os.path"; 
 
int $temp_hwin=$num_Layer*35;
int $height_rlWin=`clamp 120 230 $temp_hwin`;

string $defaultLocation_temp= `workspace -en images`;
string $defaultLocation= toNativePath($defaultLocation_temp);
int $theResolution_w=`getAttr "defaultResolution.w"`;
int $theResolution_h=`getAttr "defaultResolution.h"`;
string $getTheW;
string $getTheH;


///


//注：主UI部分   
global int $temp_oc;
$temp_oc=0;
 setIFMover($allRenderLayer);
 if(`window -ex crazySheep_render`) deleteUI crazySheep_render; 
 if($num_Layer==0) {confirmDialog -icn "warning" -title "提示" -message "场景中无可渲染层\n（默认渲染层无法被渲染）" -button "关闭"
 -cancelButton "No" -dismissString "No";
} if($num_Layer!=0) {
window -title "   Ultra Foreground Renderer  v7.00 for maya(2012-2015) "   -tlb 0  crazySheep_render ;

string $lay =`rowColumnLayout -p crazySheep_render -numberOfColumns 1  -h ($height_rlWin+140) main_layout`;
rowColumnLayout -numberOfColumns 26  ;
//frameLayout -fn "boldLabelFont" -lv 1 -l "         |Render Layer|                 |Render Using|               |Camera|                   |Image format|          |compression|    |Start/End frame|        |File name prefix|          |ON/OFF|" -w 970 -h $height_rlWin ;

text -l "            ";
text -fn "boldLabelFont" -l "|Render Layer|" ;


text -l "              ";
text -fn "boldLabelFont" -l "|Render Using|"  text_RU;
//popupMenu -parent text_RU  -button 3;
//menuItem -l "Load the Override from scene" -c "get_infoall_new;changeFormatAll($allRenderLayer);setCOMall($allRenderLayer);setCheckBox($allRenderLayer,$num_Layer)";
checkBox -l "" -cc "cb_ctrl_menu_RU()" -ann "编辑渲染器" cb_RU ;
button -vis 0 -w 20 -l "↓" -c "arrow_ctrl_RU;arrow_ctrl_menu_RU($allRenderLayer,$num_Layer);changeInfoOfRender;arrow_ctrl_IF;arrow_ctrl_menu_IF($allRenderLayer,$num_Layer)" button_RU;

text -l "     ";
text -fn "boldLabelFont" -l "|Camera|"  text_CA;
checkBox -l "" -cc "cb_ctrl_menu_CA()" -ann "编辑摄像机" cb_CA;
//popupMenu -parent text_CA  -button 3;
//menuItem -l "Load the Override from scene" -c get_camera_new;
button -vis 0 -w 20 -l "↓" -c "arrow_ctrl_CA;arrow_ctrl_menu_CA($allRenderLayer,$num_Layer);changeInfoOfRender" button_CA;

text -l "   ";
text  -fn "boldLabelFont" -l "|Image format|"  text_IF;
checkBox -l "" -cc "cb_ctrl_menu_IF()" -ann "编辑图片格式" cb_IF;
//popupMenu -parent text_IF  -button 3;
//menuItem -l "Load the Override from scene" -c "get_render_new;get_if_new;setCOMall($allRenderLayer);get_com_new";
//button  -vis 0 -w 20 -l "↓" -c "arrow_ctrl_IF;arrow_ctrl_menu_IF($allRenderLayer,$num_Layer)" button_IF;

//text -l "  ";
//text  -fn "boldLabelFont" -l "|Compression|"  text_COM;
//popupMenu -parent text_COM  -button 3;
//menuItem -l "Load the Override from scene" -c "get_render_new;changeFormatAll($allRenderLayer);setCOMall($allRenderLayer);get_com_new;get_if_new";
button -vis 0 -w 1 -l "↓" -c "arrow_ctrl_COM;arrow_ctrl_menu_COM($allRenderLayer,$num_Layer)" button_COM;
text -l "  ";
text -fn "boldLabelFont" -l "|Frame range|" text_SEF;
checkBox -l "" -cc "cb_ctrl_menu_SEF()" -ann "编辑起始结束帧" cb_SEF;
//popupMenu -parent text_SEF  -button 3;
//menuItem -l "Load the Override from scene";
button -vis 0 -w 5 -l "↓" -c "arrow_ctrl_SEF;arrow_ctrl_menu_SEF($allRenderLayer,$num_Layer)" button_SEF;
text -l "   ";
text -fn "boldLabelFont" -l "|File name prefix|" ;
checkBox -l "" -cc "cb_ctrl_menu_FNP()" -ann "编辑文件名" cb_FNP;

text -l "   ";
iconTextButton -st "iconOnly" -ann "刷新工具界面" -c refresh_window -i  "rvIPRRefresh.png";
iconTextButton -st "iconOnly" -ann "打开进度面板" -c "if_vis_pro($num_Layer)" -i  "trackRipple.png";
iconTextButton -st "iconOnly" -ann "查看详细渲染日志" -c openlog -i  "refEdOutliner.png" ;
iconTextButton -st "iconOnly" -ann "关闭所有渲染层开关" -c shutdown -i  "Mute_ON.png" ;


//text -l "       ";
//text -fn "boldLabelFont" -l "|ON/OFF|" ;

// setParent ..;   
  setParent ..;    
rowColumnLayout -numberOfColumns 1 ;
string $scrollLayout = `scrollLayout -w 835
        -horizontalScrollBarThickness 16
        -verticalScrollBarThickness   16`;
        rowColumnLayout -numberOfColumns 2  ;
        rowColumnLayout  -numberOfColumns 1  -cw 1 150;
        iconTextRadioCollection  witch_RL_sl;
        for ($CSR_1 = $num_Layer-1; $CSR_1 >-1; $CSR_1--){
        iconTextRadioButton -fn "boldLabelFont" -ebg 1   -cc ("changeInfoOfRender;changeWindowOfRender;set6cb()") -style "textOnly" -h 22 -l $allRenderLayer[$CSR_1]  -select ("button_"+$allRenderLayer[$CSR_1]);}
   
         setParent ..;  
        rowColumnLayout  -numberOfColumns 12 -cw 1 127 -cw 2 12 -cw 3 100 -cw 4 20 -cw 5 90 -cw 6 10 -cw 7 40 -cw 8 40 -cw 9 30 -cw 10 170 -cw 11 10 -cw 12 1 aaa;
        for ($CSR_2 = $num_Layer-1; $CSR_2 >-1; $CSR_2--) {
          
            //string $temp_getRenderOfLayer=`getRenderOfLayer($allRenderLayer[$CSR_2])`;
            //("vv(\""+$i+"\")")
            optionMenuGrp -en 0 -cc ("changeInfoOfRender;changeTheFormatMenu(\""+$allRenderLayer[$CSR_2]+"\");changeRUred(\""+$allRenderLayer[$CSR_2]+"\");set6cb();changeFF(\""+$allRenderLayer[$CSR_2]+"\")") -h 22 ("witch_render_"+$allRenderLayer[$CSR_2]);
menuItem -label "mayaSoftware";
menuItem -label "mentalRay" -en 0 ("MI_MR_"+$allRenderLayer[$CSR_2]);                                                                                           
menuItem -label "arnold" -en 0 ("MI_AR_"+$allRenderLayer[$CSR_2]);
menuItem -label "vray" -en 0 ("MI_VR_"+$allRenderLayer[$CSR_2]); 
string $all_render[]= `renderer -query -namesOfAvailableRenderers`;
if(`stringArrayContains "arnold" $all_render`==1)
{menuItem -e -en 1 ("MI_AR_"+$allRenderLayer[$CSR_2]);}     
if(`stringArrayContains "mentalRay" $all_render`==1)
{menuItem -e -en 1 ("MI_MR_"+$allRenderLayer[$CSR_2]);}  
if(`stringArrayContains "vray" $all_render`==1)
{menuItem -e -en 1 ("MI_VR_"+$allRenderLayer[$CSR_2]);}                       
menuItem -en 0  -label "Unsupport Render!!" ("UsRender_"+$allRenderLayer[$CSR_2]);   
text -l "   ";
            cameraOptionMenu_RL($CSR_2,$allRenderLayer);
            text -l "   ";
            formatOptionMenu_RL($CSR_2,$allRenderLayer);
            text -l "   ";
           //compressionOptionMenu_RL($CSR_2,$allRenderLayer);
            startFrameOptionTx_RL($CSR_2,$allRenderLayer);
            endFrameOptionTx_RL($CSR_2,$allRenderLayer);
            text -l "   ";
            fileNameOptionTx_RL($CSR_2,$allRenderLayer);
            text -l "   ";
            //渲染开关
           
            checkBox -vis 0 -h 22 -cc ("changeInfoOfRender;setFN(\""+$allRenderLayer[$CSR_2]+"\")") -v `getAttr ($allRenderLayer[$CSR_2]+".renderable")` -l "" ("if_render_"+$allRenderLayer[$CSR_2]);
           
                 
//string $loadRender=`getRenderOfLayer($allRenderLayer[$CSR_2])`;
//	if(stringArrayCount($loadRender,{"arnold","mentalRay","mayaSoftware"})==0)
//{optionMenuGrp -e -v "Unsupport Render!!" ("witch_render_"+$allRenderLayer[$CSR_2]);}
//else{optionMenuGrp -e  -v (`getRenderOfLayer($allRenderLayer[$CSR_2])`) ("witch_render_"+$allRenderLayer[$CSR_2]);}


        }

//select -r defaultRenderLayer

 setParent ..;  
 setParent ..;  
      setParent ..;  
   

       setParent ..;
rowColumnLayout -numberOfColumns 1 ;
   
  //separator -st "in" -w 970 -h 5;
     setParent ..; 
 rowColumnLayout -numberOfColumns 4 ;
  rowColumnLayout -numberOfColumns 1 ;
rowColumnLayout -numberOfColumns 1 -h 105;  
scrollLayout -bgc 0.671 0.671 0.671  -h 105 -w 7;
setParent ..;
setParent ..;
setParent ..;
 rowColumnLayout -numberOfColumns 1 -w 480;

rowColumnLayout -numberOfColumns 7 ;



text  -fn "boldLabelFont" -l  "Output path  :  ";
textField -cc "fix_path()" -tx ($defaultLocation+"\\") -fn "boldLabelFont" -ann "设置文件输出路径" -w 250 path_loc;
text -l " ";
button  -l "Browse…" -w 65 -ann "浏览..." -c browse_path; 
text -l "  ";

button  -l "Open path" -ann "打开路径" -w 70 -c openImagesFolder ; 
setParent ..;


rowColumnLayout -numberOfColumns 11;

text -fn "boldLabelFont" -l "Presets ：";
 optionMenuGrp -cc "R_preset_B;changeInfoOfRender"  Res_preset ;
menuItem -label "HD 1080P";
menuItem -label "HD 720P";
menuItem -label "640*480";
menuItem -label "1k square";
menuItem -label "2k square";
menuItem -label "3k square";
menuItem -label "4k square";
menuItem -label "Custom";

text -fn "boldLabelFont" -l "W ：" -w 25;
intField   -v $theResolution_w -ann "设置图像输出宽度" -w 40 -cc "R_preset_A($getTheW,$getTheH);changeInfoOfRender" the_w;
text -l " ";
text  -fn "boldLabelFont" -l "H ：" -w 25;
intField  -v $theResolution_h  -ann "设置图像输出高度" -w 40 -cc "R_preset_A($getTheW,$getTheH);changeInfoOfRender" the_h;
text -l " ";
text -fn "boldLabelFont" -l "padding ：" -ann "设置序列帧数字位数";
 optionMenuGrp -cc "changeInfoOfRender" -ann "设置序列帧数字位数" the_padding;
menuItem -label "2";
menuItem -label "3";
menuItem -label "4";
menuItem -label "5";
menuItem -label "6";
optionMenuGrp -e -v "4" the_padding;

button  -l "Render Settings" -ann "打开详细渲染设置面板" -c open_render_setting -w 100;
setParent ..;
rowColumnLayout -numberOfColumns 3  -cw 1 330;

rowColumnLayout -numberOfColumns 1  -h 3 -cw 1 330;
scrollLayout -bgc 0.671 0.671 0.671  -h 7 -w 346;
setParent ..;
//separator -st "in"  -w 70 ;
setParent ..;

text -l "      ";
text -l "  ";

rowColumnLayout -numberOfColumns 1;
rowColumnLayout -en 1 -numberOfColumns 4  -cw 1 130 -cw 2 50 -h 20 the4box;




checkBox  -l "Preserve Layer Name" cb_Preserve;

checkBox  -l "Tiled" cb_Tiled;
checkBox  -l "Autocrop" cb_Autocrop;

checkBox   -l "append" cb_append;


setParent ..;
rowColumnLayout -en 1 -numberOfColumns 7 -cw 1 1 -cw 3 1 -cw 5 1 the2box;
text -l "  ";
checkBox -en 0 -l "Merge AOVs (ar)" -ann "设置AR的AOVs是否合并" -cc changeInfoOfRender cb_m_aovs;

if(`objExists defaultArnoldDriver`){
checkBox -e -v `getAttr "defaultArnoldDriver.mergeAOVs"`  cb_m_aovs;
if(`attributeExists "preserveLayerName" "defaultArnoldDriver"`){
checkBox -e  -v `getAttr "defaultArnoldDriver.preserveLayerName"`  cb_Preserve;
checkBox -e  -v `getAttr "defaultArnoldDriver.tiled"`  cb_Tiled;
checkBox -e -v `getAttr "defaultArnoldDriver.autocrop"` cb_Autocrop;
checkBox -e -v `getAttr "defaultArnoldDriver.append"`  cb_append;

}
}

text -l "  ";
checkBox  -en 0 -l "Merge Passes (mr)" -ann "设置MR的renderPasses是否合并" -cc changeInfoOfRender cb_m_passes;
text -l "  ";
//text -en 0 -fn "boldLabelFont" -l "delay(sec): " tx_delay;
checkBox  -en 0 -l "Merge elemets (vr)" -ann "设置vr的renderElements是否合并" -cc changeInfoOfRender cb_m_RES;
setParent ..;
//text -en 0 -vis 1 -fn "tinyBoldLabelFont" -l "TIPS : This tool is uesd to render some file which \n cause  of some bugs or errors that couldn't be \n rendered  by batch render with foreground rendering.  " -w 300 text_tips;

setParent ..;
rowColumnLayout -numberOfColumns 1 -h 40;  
scrollLayout -bgc 0.671 0.671 0.671  -h 40 -w 7;
setParent ..;
setParent ..;
iconTextButton  -fn "boldLabelFont" -bgc 1.0 0.5 0.17 -h 20 -w 125 -style "iconAndTextHorizontal" -c "if_render($allRenderLayer,$num_Layer)"
    -image1 "bullet_interactivePlayback.png" -ann "开始渲染" -label "       Start \n   Rendering";
//button -bgc 1.0 0.5 0.17 -l "→) Start Rendering  (←"  -ann "click to start rendering." -h 20 -w 120 -c "if_render($allRenderLayer,$num_Layer)" button_render;
//popupMenu -parent  button_render  -button 3;
//menuItem -l "鼠标指针别闹- -！" -c "progressWindow -endProgress;";

setParent ..;
setParent ..;
rowColumnLayout -numberOfColumns 1 ;
rowColumnLayout -numberOfColumns 1 -h 105;  
scrollLayout -bgc 0.671 0.671 0.671  -h 105 -w 7;
setParent ..;
setParent ..;
setParent ..;
columnLayout -adj 0  ;

scrollField  -ann "综合渲染信息（ctrl + 鼠标滚轮可放大缩小字体）" -ww 1 -fn "smallBoldLabelFont" -ed 0 -tx `getInfo_renderUI(1)` -w 333 -h 104 info_render;

setParent ..;
setParent ..;
rowColumnLayout -numberOfColumns 6 -cw 1 250 -cw 3 70 -cw 5 50;
helpLine;
text -en 0 -fn "boldLabelFont" -l "##   tip ：Press \"ESC\" to interrupt the rendering.   ##";
text -l "";
iconTextButton -style "iconAndTextHorizontal" -fn "boldLabelFont" -ann "展开/收回" -bgc 0.2 0.2 0.2   -l "Expand"  -h 20 -w 70 -c "open_close()" button_ex;
text -l "";
iconTextButton  -fn "boldLabelFont" -bgc 0.2 0.2 0.2 -h 20 -w 60 -c open_docs_window -style "iconAndTextHorizontal"  -l "HELP" -i "out_defaultOutliner.png"  -ann "打开帮助" ;
setParent ..;
rowColumnLayout -numberOfColumns 1 ;
   
  //separator -st "in" -w 970 -h 5;
  rowColumnLayout -numberOfColumns 1 -vis 0 -en 0 -h 1 main_pro;
string $scrollLayout = `scrollLayout -w 815  -h ($height_rlWin-20)
        -horizontalScrollBarThickness 16
        -verticalScrollBarThickness   16`;
   rowColumnLayout -numberOfColumns 1  ;      
     
      rowColumnLayout -numberOfColumns 5 -cw 1 150 -cw 2 20 -cw 3 500 -cw 4 40 -cw 5 70 ;  
      for ($pr=$num_Layer-1;$pr>-1;$pr--){
       text -fn "boldLabelFont" -l $allRenderLayer[$pr];
       $the_start_frame=`intField -q -v ("startFrame_"+$allRenderLayer[$pr])`;
       text -fn "boldLabelFont" -l $the_start_frame ("sf_proc_"+$allRenderLayer[$pr]);
       rowColumnLayout -numberOfColumns 2  ;
       progressBar -pr 0 -imp 1  -ii 1 -maxValue 100 -width 500 ("proBar_render_"+$allRenderLayer[$pr]);
       
       text -fn "boldLabelFont" -l "  " ;
       
       setParent ..; 
       $the_end_frame=`intField -q -v ("endFrame_"+$allRenderLayer[$pr])`;
        text -fn "boldLabelFont" -l $the_end_frame ("ef_proc_"+$allRenderLayer[$pr]);
      
      // text -fn "boldLabelFont" -l "队列中…" ("pro_zt"+$allRenderLayer[$pr]);
       button -l "Open path" -c ("openImagesFolder_layer(\""+$allRenderLayer[$pr]+"\")") ("pro_dkml"+$allRenderLayer[$pr]);
       
  }
       setParent ..;   
       
         setParent ..;  
         text  -vis 0 -l "zhongzhi" stop;
         
         
          setParent main_pro;  
          text -l " "; 
            
            text -l " "; 
     setParent ..;  
  showWindow crazySheep_render;
 //注：预载入函数
 R_preset_A($getTheW,$getTheH);
 changeWindowOfRender;
 get3menu($allRenderLayer);
 check_error($allRenderLayer);
check_error2($allRenderLayer);
 fix_renderview();
window -e -w 850  -tlb 0  crazySheep_render ;
set6cb();

 //get_all_info;
// getFN($allRenderLayer,$num_Layer);
 //checkBox -e -en 0 -v 0 "if_render_defaultRenderLayer";
 
 //iconTextRadioButton -e -fn "obliqueLabelFont"  ("button_"+$allRenderLayer[$num_Layer-1]);
 iconTextRadioCollection -e  -select ("button_"+$allRenderLayer[$num_Layer-1])  witch_RL_sl;
 
print "\n enjoy it!!!\n";}}


fix_temp();

if_start_window;